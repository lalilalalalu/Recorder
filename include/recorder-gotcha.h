#ifndef __RECORDER_GOTCHA_H
#define __RECORDER_GOTCHA_H
#include <sys/uio.h>
#include <sys/stat.h>
#include <dirent.h>
#include <utime.h>
#include <stdbool.h>
#include "mpi.h"

#include "hdf5.h"
#include "hdf5_hl.h" 

#ifdef RECORDER_WITH_PNETCDF
#include "pnetcdf.h"
#endif

#include "gotcha/gotcha.h"
#include "recorder-logger.h"

#define __D_MPI_REQUEST MPIO_Request
#if MPI_VERSION >= 3
#define CONST const
#else
#define CONST
#endif

/*
 * Public functions
 */
void gotcha_init();
bool gotcha_posix_tracing();
bool gotcha_mpi_tracing();
bool gotcha_mpiio_tracing();
bool gotcha_hdf5_tracing();
bool gotcha_pnetcdf_tracing();
bool gotcha_netcdf_tracing();


/**
 * WRAPPER_TYPE:   type of function pointer of the wrapper
 * WRAPPEE_HANDLE: wrapee handle name 
 * WRAPPER_NAME:   wrapper name 
 */
#define WRAPPER_TYPE(func)   fptr_type_##func
#define WRAPPEE_HANDLE(func) wrappee_handle_##func
#define WRAPPER_NAME(func)   wrapper_##func

/*
 * The real call
 */
#define GOTCHA_REAL_CALL(func)   real_##func

#define GOTCHA_WRAP(func, ret, args)                                    \
    gotcha_wrappee_handle_t WRAPPEE_HANDLE(func);                       \
    typedef ret (*WRAPPER_TYPE(func)) args;                             \
    ret (*GOTCHA_REAL_CALL(func)) args;                                 \
    ret WRAPPER_NAME(func) args;

/*
 * Used in recorder-gotcha.c to define binding structures
 */
#define GOTCHA_WRAP_ACTION(func)                                        \
    {#func, WRAPPER_NAME(func), &WRAPPEE_HANDLE(func)}

/**
 * The GOTCHA_SET_REAL_CALL_NOCHECK and
 * GOTCHA_SET_REAL_CALL marcos set the the __real_func
 * pointer to the real original functionc all.
 *
 * If a function is wrapped by GOTCHA, then its real
 * funciton pointer is changed by GOTCHA. We use
 * gotcha_get_wrappee() to get the correct pointer.
 * Otherwise, simply return the acutal funciton pointer.
 *
 * The _NOCHECK version assumes the function has been 
 * wrapped by GOTCHA library (i.e. function will be 
 * intercepted by Recorder). Caller of this version must
 * make sure of this!
 */
#define GOTCHA_SET_REAL_CALL_NOCHECK(func)                              \
    do {                                                                \
        void* funcptr = gotcha_get_wrappee(WRAPPEE_HANDLE(func));       \
        GOTCHA_REAL_CALL(func) = (WRAPPER_TYPE(func)) (funcptr);        \
    } while(0);

#define GOTCHA_SET_REAL_CALL(func, func_type)                           \
    do {                                                                \
        bool intercept = false;                                         \
        if (func_type == RECORDER_POSIX)                                \
            intercept = gotcha_posix_tracing();                         \
        if (func_type == RECORDER_MPI)                                  \
            intercept = gotcha_mpi_tracing();                           \
        if (func_type == RECORDER_MPIIO)                                \
            intercept = gotcha_mpiio_tracing();                         \
        if (func_type == RECORDER_HDF5)                                 \
            intercept = gotcha_hdf5_tracing();                          \
        if (func_type == RECORDER_PNETCDF)                              \
            intercept = gotcha_pnetcdf_tracing();                       \
        if (intercept) {                                                \
            void* funcptr = gotcha_get_wrappee(WRAPPEE_HANDLE(func));   \
            GOTCHA_REAL_CALL(func) = (WRAPPER_TYPE(func)) (funcptr);    \
        } else {                                                        \
            GOTCHA_REAL_CALL(func) = func;                              \
        }                                                               \
    } while(0);


/* POSIX I/O */
GOTCHA_WRAP(creat, int, (const char *path, mode_t mode));
GOTCHA_WRAP(creat64, int, (const char *path, mode_t mode));
GOTCHA_WRAP(open, int, (const char *path, int flags, ...));
GOTCHA_WRAP(open64, int, (const char *path, int flags, ...));
GOTCHA_WRAP(close, int, (int fd));
GOTCHA_WRAP(write, ssize_t, (int fd, const void *buf, size_t count));
GOTCHA_WRAP(read, ssize_t, (int fd, void *buf, size_t count));
GOTCHA_WRAP(lseek, off_t, (int fd, off_t offset, int whence));
GOTCHA_WRAP(lseek64, off64_t, (int fd, off64_t offset, int whence));
GOTCHA_WRAP(pread, ssize_t, (int fd, void *buf, size_t count, off_t offset));
GOTCHA_WRAP(pread64, ssize_t, (int fd, void *buf, size_t count, off64_t offset));
GOTCHA_WRAP(pwrite, ssize_t, (int fd, const void *buf, size_t count, off_t offset));
GOTCHA_WRAP(pwrite64, ssize_t, (int fd, const void *buf, size_t count, off64_t offset));
GOTCHA_WRAP(readv, ssize_t, (int fd, const struct iovec *iov, int iovcnt));
GOTCHA_WRAP(writev, ssize_t, (int fd, const struct iovec *iov, int iovcnt));
GOTCHA_WRAP(mmap, void *, (void *addr, size_t length, int prot, int flags, int fd, off_t offset));
GOTCHA_WRAP(mmap64, void *, (void *addr, size_t length, int prot, int flags, int fd, off64_t offset));
GOTCHA_WRAP(msync, int, (void *addr, size_t length, int flags));
GOTCHA_WRAP(fopen, FILE *, (const char *path, const char *mode));
GOTCHA_WRAP(fopen64, FILE *, (const char *path, const char *mode));
GOTCHA_WRAP(fclose, int, (FILE * fp));
GOTCHA_WRAP(fread, size_t, (void *ptr, size_t size, size_t nmemb, FILE *stream));
GOTCHA_WRAP(fwrite, size_t, (const void *ptr, size_t size, size_t nmemb, FILE *stream));
GOTCHA_WRAP(ftell, long, (FILE *stream));
GOTCHA_WRAP(fseek, int, (FILE * stream, long offset, int whence));
GOTCHA_WRAP(fsync, int, (int fd));
GOTCHA_WRAP(fdatasync, int, (int fd));
// we need to use vprintf to trace fprintf so we can pass va_list
//GOTCHA_WRAP(vfprintf, int, (FILE *stream, const char *format, va_list ap));
// stat/fstat/lstat are wrappers in GLIBC and dlsym can not hook them.
// Instead, xstat/lxstat/fxstat are their GLIBC implementations so we can hook them.
#if __GLIBC__ == 2 && __GLIBC_MINOR__ < 33
GOTCHA_WRAP(__xstat, int, (int vers, const char *path, struct stat *buf));
GOTCHA_WRAP(__xstat64, int, (int vers, const char *path, struct stat64 *buf));
GOTCHA_WRAP(__lxstat, int, (int vers, const char *path, struct stat *buf));
GOTCHA_WRAP(__lxstat64, int, (int vers, const char *path, struct stat64 *buf));
GOTCHA_WRAP(__fxstat, int, (int vers, int fd, struct stat *buf));
GOTCHA_WRAP(__fxstat64, int, (int vers, int fd, struct stat64 *buf));
#endif
/* Other POSIX Function Calls, not directly related to I/O */
// Files and Directories
GOTCHA_WRAP(getcwd, char*, (char *buf, size_t size));
GOTCHA_WRAP(mkdir, int, (const char *pathname, mode_t mode));
GOTCHA_WRAP(rmdir, int, (const char *pathname));
GOTCHA_WRAP(chdir, int, (const char *path));
GOTCHA_WRAP(link, int, (const char *oldpath, const char *newpath));
GOTCHA_WRAP(linkat, int, (int fd1, const char *path1, int fd2, const char *path2, int flag));
GOTCHA_WRAP(unlink, int, (const char *pathname));
GOTCHA_WRAP(symlink, int, (const char *path1, const char *path2));
GOTCHA_WRAP(symlinkat, int, (const char *path1, int fd, const char *path2));
GOTCHA_WRAP(readlink, ssize_t, (const char *path, char *buf, size_t bufsize));
GOTCHA_WRAP(readlinkat, ssize_t, (int fd, const char *path, char *buf, size_t bufsize));
GOTCHA_WRAP(rename, int, (const char *oldpath, const char *newpath));
GOTCHA_WRAP(chmod, int, (const char *path, mode_t mode));
GOTCHA_WRAP(chown, int, (const char *path, uid_t owner, gid_t group));
GOTCHA_WRAP(lchown, int, (const char *path, uid_t owner, gid_t group));
GOTCHA_WRAP(utime, int, (const char *filename, const struct utimbuf *buf));
GOTCHA_WRAP(opendir, DIR*, (const char *name));
GOTCHA_WRAP(readdir, struct dirent*, (DIR *dir));
GOTCHA_WRAP(closedir, int, (DIR *dir));
// GOTCHA_WRAP(rewinddir, void, (DIR *dir));
// GOTCHA_WRAP(__xmknod, int, (int ver, const char *path, mode_t mode, dev_t dev));
// GOTCHA_WRAP(__xmknodat, int, (int ver, int fd, const char *path, mode_t mode, dev_t dev));
// Advanced File Operations
GOTCHA_WRAP(fcntl, int, (int fd, int cmd, ...));
GOTCHA_WRAP(dup, int, (int oldfd));
GOTCHA_WRAP(dup2, int, (int oldfd, int newfd));
GOTCHA_WRAP(pipe, int, (int pipefd[2]));
GOTCHA_WRAP(mkfifo, int, (const char *pathname, mode_t mode));
GOTCHA_WRAP(umask, mode_t, (mode_t mask));
GOTCHA_WRAP(fdopen, FILE*, (int fd, const char *mode));
GOTCHA_WRAP(fileno, int, (FILE *stream));
GOTCHA_WRAP(access, int, (const char *path, int amode));
GOTCHA_WRAP(faccessat, int, (int fd, const char *path, int amode, int flag));
GOTCHA_WRAP(tmpfile, FILE*, (void));
GOTCHA_WRAP(remove, int, (const char *pathname));
GOTCHA_WRAP(truncate, int, (const char *pathname, off_t length));
GOTCHA_WRAP(ftruncate, int, (int fd, off_t length));
// Added 01/15/2021
GOTCHA_WRAP(fseeko, int, (FILE *stream, off_t offset, int whence));
GOTCHA_WRAP(ftello, off_t, (FILE *stream));
// Added 10/12/2023
GOTCHA_WRAP(fflush, int, (FILE *stream));

// Others
//int statfs(const char *path, struct statfs *buf);
//int fstatfs(int fd, struct statfs *buf);




/* MPI Function Calls */

GOTCHA_WRAP(MPI_File_close, int, (MPI_File * fh))
GOTCHA_WRAP(MPI_File_set_size, int, (MPI_File fh, MPI_Offset size));
GOTCHA_WRAP(MPI_File_iread_at, int, (MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, __D_MPI_REQUEST *request));
GOTCHA_WRAP(MPI_File_iread, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype, __D_MPI_REQUEST *request));
GOTCHA_WRAP(MPI_File_iread_shared, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype, __D_MPI_REQUEST *request));
GOTCHA_WRAP(MPI_File_iwrite_at, int, (MPI_File fh, MPI_Offset offset, CONST void *buf, int count, MPI_Datatype datatype, __D_MPI_REQUEST *request));
GOTCHA_WRAP(MPI_File_iwrite, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype, __D_MPI_REQUEST *request));
GOTCHA_WRAP(MPI_File_iwrite_shared, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype, __D_MPI_REQUEST *request));
GOTCHA_WRAP(MPI_File_open, int, (MPI_Comm comm, CONST char *filename, int amode, MPI_Info info, MPI_File *fh));
GOTCHA_WRAP(MPI_File_read_all_begin, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype));
GOTCHA_WRAP(MPI_File_read_all, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_read_at_all, int, (MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_read_at_all_begin, int, (MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype));
GOTCHA_WRAP(MPI_File_read_at, int, (MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_read, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_read_ordered_begin, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype));
GOTCHA_WRAP(MPI_File_read_ordered, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_read_shared, int, (MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_set_view, int, (MPI_File fh, MPI_Offset disp, MPI_Datatype etype, MPI_Datatype filetype, CONST char *datarep, MPI_Info info));
GOTCHA_WRAP(MPI_File_sync, int, (MPI_File fh));
GOTCHA_WRAP(MPI_File_write_all_begin, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype));
GOTCHA_WRAP(MPI_File_write_all, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_write_at_all_begin, int, (MPI_File fh, MPI_Offset offset, CONST void *buf, int count, MPI_Datatype datatype));
GOTCHA_WRAP(MPI_File_write_at_all, int, (MPI_File fh, MPI_Offset offset, CONST void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_write_at, int, (MPI_File fh, MPI_Offset offset, CONST void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_write, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_write_ordered_begin, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype));
GOTCHA_WRAP(MPI_File_write_ordered, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_File_write_shared, int, (MPI_File fh, CONST void *buf, int count, MPI_Datatype datatype, MPI_Status *status));
GOTCHA_WRAP(MPI_Finalized, int, (int *flag));
/*
GOTCHA_WRAP(MPI_Finalize, int, ());
GOTCHA_WRAP(MPI_Init, int, (int *argc, char ***argv));
GOTCHA_WRAP(MPI_Init_thread, int, (int *argc, char ***argv, int required, int *provided));
*/
GOTCHA_WRAP(MPI_Comm_rank, int, (MPI_Comm comm, int *rank));
GOTCHA_WRAP(MPI_Comm_size, int, (MPI_Comm comm, int *size));
GOTCHA_WRAP(MPI_Get_processor_name, int, (char *name, int *resultlen));
GOTCHA_WRAP(MPI_Comm_set_errhandler, int, (MPI_Comm comm, MPI_Errhandler errhandler));
GOTCHA_WRAP(MPI_Barrier, int, (MPI_Comm comm));
GOTCHA_WRAP(MPI_Bcast, int, (void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm));
GOTCHA_WRAP(MPI_Gather, int, (CONST void *sbuf, int scount, MPI_Datatype stype, void *rbuf, int rcount, MPI_Datatype rtype, int root, MPI_Comm comm));
GOTCHA_WRAP(MPI_Gatherv, int, (CONST void *sbuf, int scount, MPI_Datatype stype, void *rbuf, CONST int *rcount, CONST int *displs, MPI_Datatype rtype, int root, MPI_Comm comm));
GOTCHA_WRAP(MPI_Scatter, int, (CONST void *sbuf, int scount, MPI_Datatype stype, void *rbuf, int rcount, MPI_Datatype rtype, int root, MPI_Comm comm));
GOTCHA_WRAP(MPI_Scatterv, int, (CONST void *sbuf, CONST int *scount, CONST int *displa, MPI_Datatype stype, void *rbuf, int rcount, MPI_Datatype rtype, int root, MPI_Comm comm));
GOTCHA_WRAP(MPI_Allgather, int, (CONST void *sbuf, int scount, MPI_Datatype stype, void *rbuf, int rcount, MPI_Datatype rtype, MPI_Comm comm));
GOTCHA_WRAP(MPI_Allgatherv, int, (CONST void *sbuf, int scount, MPI_Datatype stype, void *rbuf, CONST int *rcount, CONST int *displs, MPI_Datatype rtype, MPI_Comm comm));
GOTCHA_WRAP(MPI_Alltoall, int, (CONST void *sbuf, int scount, MPI_Datatype stype, void *rbuf, int rcount, MPI_Datatype rtype, MPI_Comm comm));
GOTCHA_WRAP(MPI_Reduce, int, (CONST void *sbuf, void *rbuf, int count, MPI_Datatype stype, MPI_Op op, int root, MPI_Comm comm));
GOTCHA_WRAP(MPI_Allreduce, int, (CONST void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm));
GOTCHA_WRAP(MPI_Reduce_scatter, int, (CONST void *sbuf, void *rbuf, CONST int *rcounts, MPI_Datatype stype, MPI_Op op, MPI_Comm comm));
GOTCHA_WRAP(MPI_Scan, int, (CONST void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm));
GOTCHA_WRAP(MPI_Type_commit, int, (MPI_Datatype * datatype));
GOTCHA_WRAP(MPI_Type_create_darray, int, (int size, int rank, int ndims, CONST int array_of_gsizes[], CONST int array_of_distribs[],CONST int array_of_dargs[], CONST int array_of_psizes[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype));
GOTCHA_WRAP(MPI_File_get_size, int, (MPI_File fh, MPI_Offset *size));

// Added 10 new MPI functinos on 2019/01/07
GOTCHA_WRAP(MPI_Cart_rank, int, (MPI_Comm comm, CONST int coords[], int *rank));
GOTCHA_WRAP(MPI_Cart_create, int, (MPI_Comm comm_old, int ndims, CONST int dims[], CONST int periods[], int reorder, MPI_Comm *comm_cart));
GOTCHA_WRAP(MPI_Cart_get, int, (MPI_Comm comm, int maxdims, int dims[], int periods[], int coords[]));
GOTCHA_WRAP(MPI_Cart_shift, int, (MPI_Comm comm, int direction, int disp, int *rank_source, int *rank_dest));
GOTCHA_WRAP(MPI_Wait, int, (MPI_Request *request, MPI_Status *status));
GOTCHA_WRAP(MPI_Send, int, (CONST void *buf, int count, MPI_Datatype datatype, int dest, int tag,MPI_Comm comm));
GOTCHA_WRAP(MPI_Recv, int, (void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Status *status));
GOTCHA_WRAP(MPI_Sendrecv, int, (CONST void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status *status));
GOTCHA_WRAP(MPI_Isend, int, (CONST void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request));
GOTCHA_WRAP(MPI_Irecv, int, (void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request));
// Add MPI_Waitall, MPI_Waitsome, MPI_Waitany, MPI_Ssend on 2020/08/06
GOTCHA_WRAP(MPI_Waitall, int, (int count, MPI_Request array_of_requests[], MPI_Status array_of_statuses[]));
GOTCHA_WRAP(MPI_Waitsome, int, (int incount, MPI_Request array_of_requests[], int *outcount, int array_of_indices[], MPI_Status array_of_statuses[]));
GOTCHA_WRAP(MPI_Waitany, int, (int count, MPI_Request array_of_requests[], int *indx, MPI_Status * status));
GOTCHA_WRAP(MPI_Ssend, int, (CONST void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm));
// Add MPI_Comm_split on 2020/08/17
GOTCHA_WRAP(MPI_Comm_split, int, (MPI_Comm comm, int color, int key, MPI_Comm * newcomm));
GOTCHA_WRAP(MPI_Comm_dup, int, (MPI_Comm comm, MPI_Comm * newcomm));
GOTCHA_WRAP(MPI_Comm_create, int, (MPI_Comm comm, MPI_Group group, MPI_Comm * newcomm));
// Add MPI_File_seek and MPI_File_seek_shared on 2020/08/27
GOTCHA_WRAP(MPI_File_seek, int, (MPI_File fh, MPI_Offset offset, int whence));
GOTCHA_WRAP(MPI_File_seek_shared, int, (MPI_File fh, MPI_Offset offset, int whence));
// Add MPI_Ibcast on 2020/11/13
GOTCHA_WRAP(MPI_Ibcast, int, (void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Request *request));
// Add MPI_Test, MPI_Testany, MPI_Testsome, MPI_Testall,
// MPI_Ireduce, MPI_Igather, MPI_Iscatter and MPI_Ialltoall on 2020/12/18
GOTCHA_WRAP(MPI_Test, int, (MPI_Request *request, int *flag, MPI_Status *status));
GOTCHA_WRAP(MPI_Testall, int, (int count, MPI_Request array_of_requests[], int *flag, MPI_Status array_of_statuses[]));
GOTCHA_WRAP(MPI_Testsome, int, (int incount, MPI_Request array_of_requests[], int *outcount, int array_of_indices[], MPI_Status array_of_statuses[]));
GOTCHA_WRAP(MPI_Testany, int, (int count, MPI_Request array_of_requests[], int *indx, int *flag, MPI_Status * status));
GOTCHA_WRAP(MPI_Ireduce, int, (const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm, MPI_Request *request));
GOTCHA_WRAP(MPI_Igather, int, (const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request));
GOTCHA_WRAP(MPI_Iscatter, int, (const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request));
GOTCHA_WRAP(MPI_Ialltoall, int, (const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request * request));
// Add on 2021/01/25
GOTCHA_WRAP(MPI_Comm_free, int, (MPI_Comm *comm));
GOTCHA_WRAP(MPI_Cart_sub, int, (MPI_Comm comm, const int remain_dims[], MPI_Comm *newcomm));
GOTCHA_WRAP(MPI_Comm_split_type, int, (MPI_Comm comm, int split_type, int key, MPI_Info info, MPI_Comm *newcomm));


// HDF5 
GOTCHA_WRAP(H5Dread, herr_t, (hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id, void *buf));
GOTCHA_WRAP(H5Adelete_by_idx, herr_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, hid_t lapl_id));
GOTCHA_WRAP(H5Fflush, herr_t, (hid_t object_id, H5F_scope_t scope));
GOTCHA_WRAP(H5Pget_chunk, int, (hid_t plist_id, int max_ndims, hsize_t dim[]));
GOTCHA_WRAP(H5Pset_buffer, herr_t, (hid_t plist_id, size_t size, void *tconv, void *bkg));
GOTCHA_WRAP(H5LTget_attribute, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hid_t mem_type_id, void *data));
GOTCHA_WRAP(H5Pset_all_coll_metadata_ops, herr_t, (hid_t plist_id, hbool_t is_collective));
GOTCHA_WRAP(H5Pmodify_filter, herr_t, (hid_t plist_id, H5Z_filter_t filter, unsigned int flags, size_t cd_nelmts, const unsigned int cd_values[]));
GOTCHA_WRAP(H5Fmount, herr_t, (hid_t loc, const char *name, hid_t child, hid_t plist));
GOTCHA_WRAP(H5Rget_obj_type1, H5G_obj_t, (hid_t id, H5R_type_t ref_type, const void *ref));
GOTCHA_WRAP(H5IMmake_palette, herr_t, (hid_t loc_id, const char *pal_name, const hsize_t *pal_dims, const unsigned char *pal_data));
GOTCHA_WRAP(H5Pget_driver_config_str, ssize_t, (hid_t fapl_id, char *config_buf, size_t buf_size));
GOTCHA_WRAP(H5Ewalk2, herr_t, (hid_t err_stack, H5E_direction_t direction, H5E_walk2_t func, void *client_data));
GOTCHA_WRAP(H5Oget_info3, herr_t, (hid_t loc_id, H5O_info2_t *oinfo, unsigned fields));
GOTCHA_WRAP(H5Eclose_stack, herr_t, (hid_t stack_id));
GOTCHA_WRAP(H5PTfree_vlen_buff, herr_t, (hid_t table_id, size_t bufflen, void *buff));
GOTCHA_WRAP(H5Ecreate_stack, hid_t, (void));
GOTCHA_WRAP(H5VLget_connector_id_by_name, hid_t, (const char *name));
GOTCHA_WRAP(H5TBinsert_record, herr_t, (hid_t loc_id, const char *dset_name, hsize_t start, hsize_t nrecords, size_t dst_size, const size_t *dst_offset, const size_t *dst_sizes, void *buf));
GOTCHA_WRAP(H5Otoken_cmp, herr_t, (hid_t loc_id, const H5O_token_t *token1, const H5O_token_t *token2, int *cmp_value));
GOTCHA_WRAP(H5PLremove, herr_t, (unsigned int index));
GOTCHA_WRAP(H5Pset_hyper_vector_size, herr_t, (hid_t plist_id, size_t size));
GOTCHA_WRAP(H5Sget_select_hyper_nblocks, hssize_t, (hid_t spaceid));
GOTCHA_WRAP(H5Aget_info_by_idx, herr_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5A_info_t *ainfo, hid_t lapl_id));
GOTCHA_WRAP(H5Adelete_by_name, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hid_t lapl_id));
GOTCHA_WRAP(H5Iinc_ref, int, (hid_t id));
GOTCHA_WRAP(H5Ovisit_by_name1, herr_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, H5O_iterate1_t op, void *op_data, hid_t lapl_id));
GOTCHA_WRAP(H5PLreplace, herr_t, (const char *search_path, unsigned int index));
GOTCHA_WRAP(H5Dwrite_chunk, herr_t, (hid_t dset_id, hid_t dxpl_id, uint32_t filters, const hsize_t *offset, size_t data_size, const void *buf));
GOTCHA_WRAP(H5Sselect_copy, herr_t, (hid_t dst_id, hid_t src_id));
GOTCHA_WRAP(H5Pset_dset_no_attrs_hint, herr_t, (hid_t dcpl_id, hbool_t minimize));
GOTCHA_WRAP(H5Ssel_iter_create, hid_t, (hid_t spaceid, size_t elmt_size, unsigned flags));
GOTCHA_WRAP(H5Rdestroy, herr_t, (H5R_ref_t *ref_ptr));
GOTCHA_WRAP(H5Oget_info_by_name3, herr_t, (hid_t loc_id, const char *name, H5O_info2_t *oinfo, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Pget_obj_track_times, herr_t, (hid_t plist_id, hbool_t *track_times));
GOTCHA_WRAP(H5Sselect_none, herr_t, (hid_t spaceid));
GOTCHA_WRAP(H5Lcopy, herr_t, (hid_t src_loc, const char *src_name, hid_t dst_loc, const char *dst_name, hid_t lcpl_id, hid_t lapl_id));
GOTCHA_WRAP(H5Fset_libver_bounds, herr_t, (hid_t file_id, H5F_libver_t low, H5F_libver_t high));
GOTCHA_WRAP(H5Dwrite_multi, herr_t, (size_t count, hid_t dset_id[], hid_t mem_type_id[], hid_t mem_space_id[], hid_t file_space_id[], hid_t dxpl_id, const void *buf[]));
GOTCHA_WRAP(H5Fset_latest_format, herr_t, (hid_t file_id, hbool_t latest_format));
GOTCHA_WRAP(H5Eset_current_stack, herr_t, (hid_t err_stack_id));
GOTCHA_WRAP(H5Sget_select_elem_npoints, hssize_t, (hid_t spaceid));
GOTCHA_WRAP(H5Pset_type_conv_cb, herr_t, (hid_t dxpl_id, H5T_conv_except_func_t op, void *operate_data));
GOTCHA_WRAP(H5Pset_fapl_log, herr_t, (hid_t fapl_id, const char *logfile, unsigned long long flags, size_t buf_size));
GOTCHA_WRAP(H5Orefresh, herr_t, (hid_t oid));
GOTCHA_WRAP(H5Acreate2, hid_t, (hid_t loc_id, const char *attr_name, hid_t type_id, hid_t space_id, hid_t acpl_id, hid_t aapl_id));
GOTCHA_WRAP(H5Dextend, herr_t, (hid_t dset_id, const hsize_t size[]));
GOTCHA_WRAP(H5TBread_table, herr_t, (hid_t loc_id, const char *dset_name, size_t dst_size, const size_t *dst_offset, const size_t *dst_sizes, void *dst_buf));
GOTCHA_WRAP(H5Sis_regular_hyperslab, htri_t, (hid_t spaceid));
GOTCHA_WRAP(H5Pset_modify_write_buf, herr_t, (hid_t plist_id, hbool_t modify_write_buf));
GOTCHA_WRAP(H5Scopy, hid_t, (hid_t space_id));
GOTCHA_WRAP(H5Sdecode, hid_t, (const void *buf));
GOTCHA_WRAP(H5LTset_attribute_string, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const char *attr_data));
GOTCHA_WRAP(H5Pset_sieve_buf_size, herr_t, (hid_t fapl_id, size_t size));
GOTCHA_WRAP(H5Pget_class_parent, hid_t, (hid_t pclass_id));
GOTCHA_WRAP(H5Sselect_shape_same, htri_t, (hid_t space1_id, hid_t space2_id));
GOTCHA_WRAP(H5TBwrite_records, herr_t, (hid_t loc_id, const char *dset_name, hsize_t start, hsize_t nrecords, size_t type_size, const size_t *field_offset, const size_t *dst_sizes, const void *buf));
GOTCHA_WRAP(H5Sget_select_elem_pointlist, herr_t, (hid_t spaceid, hsize_t startpoint, hsize_t numpoints, hsize_t buf[]));
GOTCHA_WRAP(H5LTread_bitfield_value, herr_t, (hid_t dset_id, int num_values, const unsigned *offset, const unsigned *lengths, hid_t space, int *buf));
GOTCHA_WRAP(H5IMis_palette, herr_t, (hid_t loc_id, const char *dset_name));
GOTCHA_WRAP(H5Freopen, hid_t, (hid_t file_id));
GOTCHA_WRAP(H5Punregister, herr_t, (hid_t pclass_id, const char *name));
GOTCHA_WRAP(H5Pset_szip, herr_t, (hid_t plist_id, unsigned options_mask, unsigned pixels_per_block));
GOTCHA_WRAP(H5Fget_create_plist, hid_t, (hid_t file_id));
GOTCHA_WRAP(H5Tget_class, H5T_class_t, (hid_t type_id));
GOTCHA_WRAP(H5EScancel, herr_t, (hid_t es_id, size_t *num_not_canceled, hbool_t *err_occurred));
GOTCHA_WRAP(H5Tcommit1, herr_t, (hid_t loc_id, const char *name, hid_t type_id));
GOTCHA_WRAP(H5Sselect_adjust, herr_t, (hid_t spaceid, const hssize_t *offset));
GOTCHA_WRAP(H5Pset_filter_callback, herr_t, (hid_t plist_id, H5Z_filter_func_t func, void *op_data));
GOTCHA_WRAP(H5Tdecode, hid_t, (const void *buf));
GOTCHA_WRAP(H5Rget_obj_type2, herr_t, (hid_t id, H5R_type_t ref_type, const void *ref, H5O_type_t *obj_type));
GOTCHA_WRAP(H5Pcopy, hid_t, (hid_t plist_id));
GOTCHA_WRAP(H5Dget_num_chunks, herr_t, (hid_t dset_id, hid_t fspace_id, hsize_t *nchunks));
GOTCHA_WRAP(H5Pget_coll_metadata_write, herr_t, (hid_t plist_id, hbool_t *is_collective));
GOTCHA_WRAP(H5IMmake_image_24bit, herr_t, (hid_t loc_id, const char *dset_name, hsize_t width, hsize_t height, const char *interlace, const unsigned char *buffer));
GOTCHA_WRAP(H5set_free_list_limits, herr_t, (int reg_global_lim, int reg_list_lim, int arr_global_lim, int arr_list_lim, int blk_global_lim, int blk_list_lim));
GOTCHA_WRAP(H5Iget_name, ssize_t, (hid_t id, char *name, size_t size));
GOTCHA_WRAP(H5Scombine_hyperslab, hid_t, (hid_t space_id, H5S_seloper_t op, const hsize_t start[], const hsize_t stride[], const hsize_t count[], const hsize_t block[]));
GOTCHA_WRAP(H5Aget_name, ssize_t, (hid_t attr_id, size_t buf_size, char *buf));
GOTCHA_WRAP(H5TBget_table_info, herr_t, (hid_t loc_id, const char *dset_name, hsize_t *nfields, hsize_t *nrecords));
GOTCHA_WRAP(H5Aread, herr_t, (hid_t attr_id, hid_t type_id, void *buf));
GOTCHA_WRAP(H5Pset_deflate, herr_t, (hid_t plist_id, unsigned level));
GOTCHA_WRAP(H5Ropen_object, hid_t, (H5R_ref_t *ref_ptr, hid_t rapl_id, hid_t oapl_id));
GOTCHA_WRAP(H5Pget_mcdt_search_cb, herr_t, (hid_t plist_id, H5O_mcdt_search_cb_t *func, void **op_data));
GOTCHA_WRAP(H5LTmake_dataset_double, herr_t, (hid_t loc_id, const char *dset_name, int rank, const hsize_t *dims, const double *buffer));
GOTCHA_WRAP(H5LTtext_to_dtype, hid_t, (const char *text, H5LT_lang_t lang_type));
GOTCHA_WRAP(H5Eget_num, ssize_t, (hid_t error_stack_id));
GOTCHA_WRAP(H5Pget_fill_time, herr_t, (hid_t plist_id, H5D_fill_time_t *fill_time));
GOTCHA_WRAP(H5LTset_attribute_double, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const double *buffer, size_t size));
GOTCHA_WRAP(H5Pget_cache, herr_t, (hid_t plist_id, int *mdc_nelmts, size_t *rdcc_nslots, size_t *rdcc_nbytes, double *rdcc_w0));
GOTCHA_WRAP(H5ESwait, herr_t, (hid_t es_id, uint64_t timeout, size_t *num_in_progress, hbool_t *err_occurred));
GOTCHA_WRAP(H5VLclose, herr_t, (hid_t connector_id));
GOTCHA_WRAP(H5Eget_class_name, ssize_t, (hid_t class_id, char *name, size_t size));
GOTCHA_WRAP(H5Pset_dxpl_mpio_chunk_opt_ratio, herr_t, (hid_t dxpl_id, unsigned percent_num_proc_per_chunk));
GOTCHA_WRAP(H5LTget_attribute_int, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, int *data));
GOTCHA_WRAP(H5Pset_obj_track_times, herr_t, (hid_t plist_id, hbool_t track_times));
GOTCHA_WRAP(H5TBwrite_fields_name, herr_t, (hid_t loc_id, const char *dset_name, const char *field_names, hsize_t start, hsize_t nrecords, size_t type_size, const size_t *field_offset, const size_t *dst_sizes, const void *buf));
GOTCHA_WRAP(H5atclose, herr_t, (H5_atclose_func_t func, void *ctx));
GOTCHA_WRAP(H5Rget_name, ssize_t, (hid_t loc_id, H5R_type_t ref_type, const void *ref, char *name, size_t size));
GOTCHA_WRAP(H5Pget_userblock, herr_t, (hid_t plist_id, hsize_t *size));
GOTCHA_WRAP(H5Gopen1, hid_t, (hid_t loc_id, const char *name));
GOTCHA_WRAP(H5Dfill, herr_t, (const void *fill, hid_t fill_type_id, void *buf, hid_t buf_type_id, hid_t space_id));
GOTCHA_WRAP(H5Pset_relax_file_integrity_checks, herr_t, (hid_t plist_id, uint64_t flags));
GOTCHA_WRAP(H5Sget_simple_extent_ndims, int, (hid_t space_id));
GOTCHA_WRAP(H5Pset_fapl_direct, herr_t, (hid_t fapl_id, size_t alignment, size_t block_size, size_t cbuf_size));
GOTCHA_WRAP(H5Pget_fclose_degree, herr_t, (hid_t fapl_id, H5F_close_degree_t *degree));
GOTCHA_WRAP(H5Gmove, herr_t, (hid_t src_loc_id, const char *src_name, const char *dst_name));
GOTCHA_WRAP(H5Aopen_idx, hid_t, (hid_t loc_id, unsigned idx));
GOTCHA_WRAP(H5Eprint2, herr_t, (hid_t err_stack, FILE *stream));
GOTCHA_WRAP(H5Aclose, herr_t, (hid_t attr_id));
GOTCHA_WRAP(H5DSget_label, ssize_t, (hid_t did, unsigned int idx, char *label, size_t size));
GOTCHA_WRAP(H5Pget_mpio_actual_io_mode, herr_t, (hid_t plist_id, H5D_mpio_actual_io_mode_t *actual_io_mode));
GOTCHA_WRAP(H5Pset_selection_io, herr_t, (hid_t plist_id, H5D_selection_io_mode_t selection_io_mode));
GOTCHA_WRAP(H5LDget_dset_type_size, size_t, (hid_t did, const char *fields));
GOTCHA_WRAP(H5LTget_attribute_double, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, double *data));
GOTCHA_WRAP(H5IMunlink_palette, herr_t, (hid_t loc_id, const char *image_name, const char *pal_name));
GOTCHA_WRAP(H5Tcommit_async, herr_t, (hid_t loc_id, const char *name, hid_t type_id, hid_t lcpl_id, hid_t tcpl_id, hid_t tapl_id, hid_t es_id));
GOTCHA_WRAP(H5Pset_external, herr_t, (hid_t plist_id, const char *name, off_t offset, hsize_t size));
GOTCHA_WRAP(H5Aget_storage_size, hsize_t, (hid_t attr_id));
GOTCHA_WRAP(H5Pget_alloc_time, herr_t, (hid_t plist_id, H5D_alloc_time_t *alloc_time));
GOTCHA_WRAP(H5Pget_small_data_block_size, herr_t, (hid_t fapl_id, hsize_t *size));
GOTCHA_WRAP(H5Zfilter_avail, htri_t, (H5Z_filter_t id));
GOTCHA_WRAP(H5Rget_file_name, ssize_t, (const H5R_ref_t *ref_ptr, char *name, size_t size));
GOTCHA_WRAP(H5Pget_elink_prefix, ssize_t, (hid_t plist_id, char *prefix, size_t size));
GOTCHA_WRAP(H5allocate_memory, void *, (size_t size, hbool_t clear));
GOTCHA_WRAP(H5PLinsert, herr_t, (const char *search_path, unsigned int index));
GOTCHA_WRAP(H5Pget_no_selection_io_cause, herr_t, (hid_t plist_id, uint32_t *no_selection_io_cause));
GOTCHA_WRAP(H5LTget_dataset_ndims, herr_t, (hid_t loc_id, const char *dset_name, int *rank));
GOTCHA_WRAP(H5Pget_class, hid_t, (hid_t plist_id));
GOTCHA_WRAP(H5Eget_minor, char *, (H5E_minor_t min));
GOTCHA_WRAP(H5Ropen_region, hid_t, (H5R_ref_t *ref_ptr, hid_t rapl_id, hid_t oapl_id));
GOTCHA_WRAP(H5Pget_preserve, int, (hid_t plist_id));
GOTCHA_WRAP(H5Ovisit1, herr_t, (hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order, H5O_iterate1_t op, void *op_data));
GOTCHA_WRAP(H5Pget_gc_references, herr_t, (hid_t fapl_id, unsigned *gc_ref));
GOTCHA_WRAP(H5Ssel_iter_close, herr_t, (hid_t sel_iter_id));
GOTCHA_WRAP(H5Pall_filters_avail, htri_t, (hid_t plist_id));
GOTCHA_WRAP(H5Pexist, htri_t, (hid_t plist_id, const char *name));
GOTCHA_WRAP(H5Fget_vfd_handle, herr_t, (hid_t file_id, hid_t fapl, void **file_handle));
GOTCHA_WRAP(H5LRcopy_region, herr_t, (hid_t obj_id, hdset_reg_ref_t *ref, const char *file, const char *path, const hsize_t *block_coord));
GOTCHA_WRAP(H5Acreate1, hid_t, (hid_t loc_id, const char *name, hid_t type_id, hid_t space_id, hid_t acpl_id));
GOTCHA_WRAP(H5Tdetect_class, htri_t, (hid_t type_id, H5T_class_t cls));
GOTCHA_WRAP(H5ESget_err_info, herr_t, (hid_t es_id, size_t num_err_info, H5ES_err_info_t err_info[], size_t *err_cleared));
GOTCHA_WRAP(H5Eclose_msg, herr_t, (hid_t err_id));
GOTCHA_WRAP(H5Rcreate_attr, herr_t, (hid_t loc_id, const char *name, const char *attr_name, hid_t oapl_id, H5R_ref_t *ref_ptr));
GOTCHA_WRAP(H5Olink, herr_t, (hid_t obj_id, hid_t new_loc_id, const char *new_name, hid_t lcpl_id, hid_t lapl_id));
GOTCHA_WRAP(H5PTget_next, herr_t, (hid_t table_id, size_t nrecords, void *data));
GOTCHA_WRAP(H5Lexists, htri_t, (hid_t loc_id, const char *name, hid_t lapl_id));
GOTCHA_WRAP(H5Fget_info1, herr_t, (hid_t obj_id, H5F_info1_t *file_info));
GOTCHA_WRAP(H5Pset_fapl_windows, herr_t, (hid_t fapl_id));
GOTCHA_WRAP(H5Pset_mdc_image_config, herr_t, (hid_t plist_id, H5AC_cache_image_config_t *config_ptr));
GOTCHA_WRAP(H5Eregister_class, hid_t, (const char *cls_name, const char *lib_name, const char *version));
GOTCHA_WRAP(H5Dget_chunk_info_by_coord, herr_t, (hid_t dset_id, const hsize_t *offset, unsigned *filter_mask, haddr_t *addr, hsize_t *size));
GOTCHA_WRAP(H5Pget_size, herr_t, (hid_t id, const char *name, size_t *size));
GOTCHA_WRAP(H5Pget_virtual_count, herr_t, (hid_t dcpl_id, size_t *count));
GOTCHA_WRAP(H5Pget_edc_check, H5Z_EDC_t, (hid_t plist_id));
GOTCHA_WRAP(H5VLquery_optional, herr_t, (hid_t obj_id, H5VL_subclass_t subcls, int opt_type, uint64_t *flags));
GOTCHA_WRAP(H5dont_atexit, herr_t, (void));
GOTCHA_WRAP(H5Pget_vol_id, herr_t, (hid_t plist_id, hid_t *vol_id));
GOTCHA_WRAP(H5IMis_image, herr_t, (hid_t loc_id, const char *dset_name));
GOTCHA_WRAP(H5PLget, ssize_t, (unsigned int index, char *path_buf, size_t buf_size));
GOTCHA_WRAP(H5IMlink_palette, herr_t, (hid_t loc_id, const char *image_name, const char *pal_name));
GOTCHA_WRAP(H5Pfill_value_defined, herr_t, (hid_t plist, H5D_fill_value_t *status));
GOTCHA_WRAP(H5Oopen_by_token, hid_t, (hid_t loc_id, H5O_token_t token));
GOTCHA_WRAP(H5Pget_virtual_dsetname, ssize_t, (hid_t dcpl_id, size_t index, char *name, size_t size));
GOTCHA_WRAP(H5Pget, herr_t, (hid_t plist_id, const char *name, void *value));
GOTCHA_WRAP(H5Ropen_attr, hid_t, (H5R_ref_t *ref_ptr, hid_t rapl_id, hid_t aapl_id));
GOTCHA_WRAP(H5Dwrite, herr_t, (hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id, const void *buf));
GOTCHA_WRAP(H5LTset_attribute_uchar, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const unsigned char *buffer, size_t size));
GOTCHA_WRAP(H5Pget_vlen_mem_manager, herr_t, (hid_t plist_id, H5MM_allocate_t *alloc_func, void **alloc_info, H5MM_free_t *free_func, void **free_info));
GOTCHA_WRAP(H5ESregister_insert_func, herr_t, (hid_t es_id, H5ES_event_insert_func_t func, void *ctx));
GOTCHA_WRAP(H5Dcreate2, hid_t, (hid_t loc_id, const char *name, hid_t type_id, hid_t space_id, hid_t lcpl_id, hid_t dcpl_id, hid_t dapl_id));
GOTCHA_WRAP(H5TBAget_fill, htri_t, (hid_t loc_id, const char *dset_name, hid_t dset_id, unsigned char *dst_buf));
GOTCHA_WRAP(H5Pset_driver_by_name, herr_t, (hid_t plist_id, const char *driver_name, const char *driver_config));
GOTCHA_WRAP(H5Tcommitted, htri_t, (hid_t type_id));
GOTCHA_WRAP(H5Pset_attr_creation_order, herr_t, (hid_t plist_id, unsigned crt_order_flags));
GOTCHA_WRAP(H5PLsize, herr_t, (unsigned int *num_paths));
GOTCHA_WRAP(H5Lunpack_elink_val, herr_t, (const void *ext_linkval, size_t link_size, unsigned *flags, const char **filename, const char **obj_path));
GOTCHA_WRAP(H5Fget_eoa, herr_t, (hid_t file_id, haddr_t *eoa));
GOTCHA_WRAP(H5Sget_simple_extent_dims, int, (hid_t space_id, hsize_t dims[], hsize_t maxdims[]));
GOTCHA_WRAP(H5PTget_dataset, hid_t, (hid_t table_id));
GOTCHA_WRAP(H5TBadd_records_from, herr_t, (hid_t loc_id, const char *dset_name1, hsize_t start1, hsize_t nrecords, const char *dset_name2, hsize_t start2));
GOTCHA_WRAP(H5Eset_auto2, herr_t, (hid_t estack_id, H5E_auto2_t func, void *client_data));
GOTCHA_WRAP(H5TBcombine_tables, herr_t, (hid_t loc_id1, const char *dset_name1, hid_t loc_id2, const char *dset_name2, const char *dset_name3));
GOTCHA_WRAP(H5Pget_filter1, H5Z_filter_t, (hid_t plist_id, unsigned filter, unsigned int *flags, size_t *cd_nelmts, unsigned cd_values[], size_t namelen, char name[]));
GOTCHA_WRAP(H5Lget_val_by_idx, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, void *buf, size_t size, hid_t lapl_id));
GOTCHA_WRAP(H5Oclose, herr_t, (hid_t object_id));
GOTCHA_WRAP(H5Fget_fileno, herr_t, (hid_t file_id, unsigned long *fileno));
GOTCHA_WRAP(H5Fcreate, hid_t, (const char *filename, unsigned flags, hid_t fcpl_id, hid_t fapl_id));
GOTCHA_WRAP(H5Pset_userblock, herr_t, (hid_t plist_id, hsize_t size));
GOTCHA_WRAP(H5Oget_comment, ssize_t, (hid_t obj_id, char *comment, size_t bufsize));
GOTCHA_WRAP(H5Pset_chunk, herr_t, (hid_t plist_id, int ndims, const hsize_t dim[]));
GOTCHA_WRAP(H5DSis_attached, htri_t, (hid_t did, hid_t dsid, unsigned int idx));
GOTCHA_WRAP(H5LTmake_dataset_string, herr_t, (hid_t loc_id, const char *dset_name, const char *buf));
GOTCHA_WRAP(H5Dread_chunk, herr_t, (hid_t dset_id, hid_t dxpl_id, const hsize_t *offset, uint32_t *filters, void *buf));
GOTCHA_WRAP(H5VLget_connector_id, hid_t, (hid_t obj_id));
GOTCHA_WRAP(H5Pset_layout, herr_t, (hid_t plist_id, H5D_layout_t layout));
GOTCHA_WRAP(H5Sselect_valid, htri_t, (hid_t spaceid));
GOTCHA_WRAP(H5Tencode, herr_t, (hid_t obj_id, void *buf, size_t *nalloc));
GOTCHA_WRAP(H5Pget_dset_no_attrs_hint, herr_t, (hid_t dcpl_id, hbool_t *minimize));
GOTCHA_WRAP(H5Pset_btree_ratios, herr_t, (hid_t plist_id, double left, double middle, double right));
GOTCHA_WRAP(H5Iget_type, H5I_type_t, (hid_t id));
GOTCHA_WRAP(H5LRmake_dataset, herr_t, (hid_t loc_id, const char *path, hid_t type_id, const size_t buf_size, const hid_t *loc_id_ref, const hdset_reg_ref_t *buf));
GOTCHA_WRAP(H5Pclose, herr_t, (hid_t plist_id));
GOTCHA_WRAP(H5Fclear_elink_file_cache, herr_t, (hid_t file_id));
GOTCHA_WRAP(H5TBmake_table, herr_t, (const char *table_title, hid_t loc_id, const char *dset_name, hsize_t nfields, hsize_t nrecords, size_t type_size, const char *field_names[], const size_t *field_offset, const hid_t *field_types, hsize_t chunk_size, void *fill_data, int compress, const void *buf));
GOTCHA_WRAP(H5Pequal, htri_t, (hid_t id1, hid_t id2));
GOTCHA_WRAP(H5Pset_evict_on_close, herr_t, (hid_t fapl_id, hbool_t evict_on_close));
GOTCHA_WRAP(H5Dopen2, hid_t, (hid_t loc_id, const char *name, hid_t dapl_id));
GOTCHA_WRAP(H5Ldelete_by_idx, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, hid_t lapl_id));
GOTCHA_WRAP(H5LTset_attribute_long_long, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const long long *buffer, size_t size));
GOTCHA_WRAP(H5Oget_native_info_by_idx, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5O_native_info_t *oinfo, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Pget_create_intermediate_group, herr_t, (hid_t plist_id, unsigned *crt_intmd));
GOTCHA_WRAP(H5Epush1, herr_t, (const char *file, const char *func, unsigned line, H5E_major_t maj, H5E_minor_t min, const char *str));
GOTCHA_WRAP(H5Gset_comment, herr_t, (hid_t loc_id, const char *name, const char *comment));
GOTCHA_WRAP(H5Pget_data_transform, ssize_t, (hid_t plist_id, char *expression, size_t size));
GOTCHA_WRAP(H5Pget_sizes, herr_t, (hid_t plist_id, size_t *sizeof_addr, size_t *sizeof_size));
GOTCHA_WRAP(H5Lget_name_by_idx, ssize_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, char *name, size_t size, hid_t lapl_id));
GOTCHA_WRAP(H5PTread_packets, herr_t, (hid_t table_id, hsize_t start, size_t nrecords, void *data));
GOTCHA_WRAP(H5Oget_info1, herr_t, (hid_t loc_id, H5O_info1_t *oinfo));
GOTCHA_WRAP(H5DSattach_scale, herr_t, (hid_t did, hid_t dsid, unsigned int idx));
GOTCHA_WRAP(H5Zunregister, herr_t, (H5Z_filter_t id));
GOTCHA_WRAP(H5Pset_cache, herr_t, (hid_t plist_id, int mdc_nelmts, size_t rdcc_nslots, size_t rdcc_nbytes, double rdcc_w0));
GOTCHA_WRAP(H5resize_memory, void *, (void *mem, size_t size));
GOTCHA_WRAP(H5TBdelete_field, herr_t, (hid_t loc_id, const char *dset_name, const char *field_name));
GOTCHA_WRAP(H5Padd_merge_committed_dtype_path, herr_t, (hid_t plist_id, const char *path));
GOTCHA_WRAP(H5Tget_create_plist, hid_t, (hid_t type_id));
GOTCHA_WRAP(H5Pset_edc_check, herr_t, (hid_t plist_id, H5Z_EDC_t check));
GOTCHA_WRAP(H5Pset_vlen_mem_manager, herr_t, (hid_t plist_id, H5MM_allocate_t alloc_func, void *alloc_info, H5MM_free_t free_func, void *free_info));
GOTCHA_WRAP(H5Grefresh, herr_t, (hid_t group_id));
GOTCHA_WRAP(H5Dvlen_get_buf_size, herr_t, (hid_t dset_id, hid_t type_id, hid_t space_id, hsize_t *size));
GOTCHA_WRAP(H5Pset_libver_bounds, herr_t, (hid_t plist_id, H5F_libver_t low, H5F_libver_t high));
GOTCHA_WRAP(H5Tcommit_anon, herr_t, (hid_t loc_id, hid_t type_id, hid_t tcpl_id, hid_t tapl_id));
GOTCHA_WRAP(H5Oset_comment_by_name, herr_t, (hid_t loc_id, const char *name, const char *comment, hid_t lapl_id));
GOTCHA_WRAP(H5LTmake_dataset_short, herr_t, (hid_t loc_id, const char *dset_name, int rank, const hsize_t *dims, const short *buffer));
GOTCHA_WRAP(H5Epop, herr_t, (hid_t err_stack, size_t count));
GOTCHA_WRAP(H5IMget_palette, herr_t, (hid_t loc_id, const char *image_name, int pal_number, unsigned char *pal_data));
GOTCHA_WRAP(H5LTmake_dataset, herr_t, (hid_t loc_id, const char *dset_name, int rank, const hsize_t *dims, hid_t type_id, const void *buffer));
GOTCHA_WRAP(H5Pset_coll_metadata_write, herr_t, (hid_t plist_id, hbool_t is_collective));
GOTCHA_WRAP(H5Sencode1, herr_t, (hid_t obj_id, void *buf, size_t *nalloc));
GOTCHA_WRAP(H5Rget_type, H5R_type_t, (const H5R_ref_t *ref_ptr));
GOTCHA_WRAP(H5Pget_selection_io, herr_t, (hid_t plist_id, H5D_selection_io_mode_t *selection_io_mode));
GOTCHA_WRAP(H5Pset_fill_value, herr_t, (hid_t plist_id, hid_t type_id, const void *value));
GOTCHA_WRAP(H5Pset_alignment, herr_t, (hid_t fapl_id, hsize_t threshold, hsize_t alignment));
GOTCHA_WRAP(H5Gclose, herr_t, (hid_t group_id));
GOTCHA_WRAP(H5Sis_simple, htri_t, (hid_t space_id));
GOTCHA_WRAP(H5DSdetach_scale, herr_t, (hid_t did, hid_t dsid, unsigned int idx));
GOTCHA_WRAP(H5Dcreate1, hid_t, (hid_t loc_id, const char *name, hid_t type_id, hid_t space_id, hid_t dcpl_id));
GOTCHA_WRAP(H5Pget_copy_object, herr_t, (hid_t plist_id, unsigned *copy_options));
GOTCHA_WRAP(H5Ssel_iter_get_seq_list, herr_t, (hid_t sel_iter_id, size_t maxseq, size_t maxelmts, size_t *nseq, size_t *nelmts, hsize_t *off, size_t *len));
GOTCHA_WRAP(H5Pset_dataset_io_hyperslab_selection, herr_t, (hid_t plist_id, unsigned rank, H5S_seloper_t op, const hsize_t start[], const hsize_t stride[], const hsize_t count[], const hsize_t block[]));
GOTCHA_WRAP(H5Pset_chunk_opts, herr_t, (hid_t plist_id, unsigned opts));
GOTCHA_WRAP(H5PTcreate_fl, hid_t, (hid_t loc_id, const char *dset_name, hid_t dtype_id, hsize_t chunk_size, int compression));
GOTCHA_WRAP(H5Aiterate1, herr_t, (hid_t loc_id, unsigned *idx, H5A_operator1_t op, void *op_data));
GOTCHA_WRAP(H5Topen1, hid_t, (hid_t loc_id, const char *name));
GOTCHA_WRAP(H5Sselect_project_intersection, hid_t, (hid_t src_space_id, hid_t dst_space_id, hid_t src_intersect_space_id));
GOTCHA_WRAP(H5LTset_attribute_int, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const int *buffer, size_t size));
GOTCHA_WRAP(H5Pget_elink_acc_flags, herr_t, (hid_t lapl_id, unsigned *flags));
GOTCHA_WRAP(H5Pset_page_buffer_size, herr_t, (hid_t plist_id, size_t buf_size, unsigned min_meta_per, unsigned min_raw_per));
GOTCHA_WRAP(H5Fclose, herr_t, (hid_t file_id));
GOTCHA_WRAP(H5Giterate, herr_t, (hid_t loc_id, const char *name, int *idx, H5G_iterate_t op, void *op_data));
GOTCHA_WRAP(H5Tequal, htri_t, (hid_t type1_id, hid_t type2_id));
GOTCHA_WRAP(H5Oget_native_info_by_name, herr_t, (hid_t loc_id, const char *name, H5O_native_info_t *oinfo, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Pset_file_space, herr_t, (hid_t plist_id, H5F_file_space_type_t strategy, hsize_t threshold));
GOTCHA_WRAP(H5Requal, htri_t, (const H5R_ref_t *ref1_ptr, const H5R_ref_t *ref2_ptr));
GOTCHA_WRAP(H5DOwrite_chunk, herr_t, (hid_t dset_id, hid_t dxpl_id, uint32_t filters, const hsize_t *offset, size_t data_size, const void *buf));
GOTCHA_WRAP(H5PTget_num_packets, herr_t, (hid_t table_id, hsize_t *nrecords));
GOTCHA_WRAP(H5Dget_access_plist, hid_t, (hid_t dset_id));
GOTCHA_WRAP(H5Pset_mdc_log_options, herr_t, (hid_t plist_id, hbool_t is_enabled, const char *location, hbool_t start_on_access));
GOTCHA_WRAP(H5Adelete, herr_t, (hid_t loc_id, const char *attr_name));
GOTCHA_WRAP(H5Pset_shuffle, herr_t, (hid_t plist_id));
GOTCHA_WRAP(H5Pset_file_space_strategy, herr_t, (hid_t plist_id, H5F_fspace_strategy_t strategy, hbool_t persist, hsize_t threshold));
GOTCHA_WRAP(H5Eauto_is_v2, herr_t, (hid_t err_stack, unsigned *is_stack));
GOTCHA_WRAP(H5Aopen_name, hid_t, (hid_t loc_id, const char *name));
GOTCHA_WRAP(H5Ecreate_msg, hid_t, (hid_t cls, H5E_type_t msg_type, const char *msg));
GOTCHA_WRAP(H5Odecr_refcount, herr_t, (hid_t object_id));
GOTCHA_WRAP(H5Rget_region, hid_t, (hid_t dataset, H5R_type_t ref_type, const void *ref));
GOTCHA_WRAP(H5Scombine_select, hid_t, (hid_t space1_id, H5S_seloper_t op, hid_t space2_id));
GOTCHA_WRAP(H5Pset_driver, herr_t, (hid_t plist_id, hid_t driver_id, const void *driver_info));
GOTCHA_WRAP(H5Dget_create_plist, hid_t, (hid_t dset_id));
GOTCHA_WRAP(H5Pset_fapl_split, herr_t, (hid_t fapl, const char *meta_ext, hid_t meta_plist_id, const char *raw_ext, hid_t raw_plist_id));
GOTCHA_WRAP(H5Gget_num_objs, herr_t, (hid_t loc_id, hsize_t *num_objs));
GOTCHA_WRAP(H5Dget_chunk_info, herr_t, (hid_t dset_id, hid_t fspace_id, hsize_t chk_idx, hsize_t *offset, unsigned *filter_mask, haddr_t *addr, hsize_t *size));
GOTCHA_WRAP(H5PTcreate_index, herr_t, (hid_t table_id));
GOTCHA_WRAP(H5Aget_num_attrs, int, (hid_t loc_id));
GOTCHA_WRAP(H5Oenable_mdc_flushes, herr_t, (hid_t object_id));
GOTCHA_WRAP(H5LTdtype_to_text, herr_t, (hid_t dtype, char *str, H5LT_lang_t lang_type, size_t *len));
GOTCHA_WRAP(H5LRcopy_reference, herr_t, (hid_t obj_id, hdset_reg_ref_t *ref, const char *file, const char *path, const hsize_t *block_coord, hdset_reg_ref_t *ref_new));
GOTCHA_WRAP(H5Pget_modify_write_buf, herr_t, (hid_t plist_id, hbool_t *modify_write_buf));
GOTCHA_WRAP(H5TBget_field_info, herr_t, (hid_t loc_id, const char *dset_name, char *field_names[], size_t *field_sizes, size_t *field_offsets, size_t *type_size));
GOTCHA_WRAP(H5Pget_filter_by_id2, herr_t, (hid_t plist_id, H5Z_filter_t filter_id, unsigned int *flags, size_t *cd_nelmts, unsigned cd_values[], size_t namelen, char name[], unsigned *filter_config));
GOTCHA_WRAP(H5Zregister, herr_t, (const void *cls));
GOTCHA_WRAP(H5LTget_attribute_uint, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, unsigned int *data));
GOTCHA_WRAP(H5Fget_file_image, ssize_t, (hid_t file_id, void *buf_ptr, size_t buf_len));
GOTCHA_WRAP(H5Gget_objinfo, herr_t, (hid_t loc_id, const char *name, hbool_t follow_link, H5G_stat_t *statbuf));
GOTCHA_WRAP(H5Gcreate1, hid_t, (hid_t loc_id, const char *name, size_t size_hint));
GOTCHA_WRAP(H5Oopen_by_addr, hid_t, (hid_t loc_id, haddr_t addr));
GOTCHA_WRAP(H5Pget_mpi_params, herr_t, (hid_t fapl_id, MPI_Comm *comm, MPI_Info *info));
GOTCHA_WRAP(H5is_library_threadsafe, herr_t, (hbool_t *is_ts));
GOTCHA_WRAP(H5Sget_select_npoints, hssize_t, (hid_t spaceid));
GOTCHA_WRAP(H5LTset_attribute_ulong, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const unsigned long *buffer, size_t size));
GOTCHA_WRAP(H5VLget_connector_id_by_value, hid_t, (H5VL_class_value_t connector_value));
GOTCHA_WRAP(H5Pget_nprops, herr_t, (hid_t id, size_t *nprops));
GOTCHA_WRAP(H5Pset_shared_mesg_phase_change, herr_t, (hid_t plist_id, unsigned max_list, unsigned min_btree));
GOTCHA_WRAP(H5Pget_metadata_read_attempts, herr_t, (hid_t plist_id, unsigned *attempts));
GOTCHA_WRAP(H5Sselect_hyperslab, herr_t, (hid_t space_id, H5S_seloper_t op, const hsize_t start[], const hsize_t stride[], const hsize_t count[], const hsize_t block[]));
GOTCHA_WRAP(H5Oexists_by_name, htri_t, (hid_t loc_id, const char *name, hid_t lapl_id));
GOTCHA_WRAP(H5Pget_alignment, herr_t, (hid_t fapl_id, hsize_t *threshold, hsize_t *alignment));
GOTCHA_WRAP(H5Eget_msg, ssize_t, (hid_t msg_id, H5E_type_t *type, char *msg, size_t size));
GOTCHA_WRAP(H5Pset_attr_phase_change, herr_t, (hid_t plist_id, unsigned max_compact, unsigned min_dense));
GOTCHA_WRAP(H5Rcreate_region, herr_t, (hid_t loc_id, const char *name, hid_t space_id, hid_t oapl_id, H5R_ref_t *ref_ptr));
GOTCHA_WRAP(H5Iget_ref, int, (hid_t id));
GOTCHA_WRAP(H5Acreate_by_name, hid_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hid_t type_id, hid_t space_id, hid_t acpl_id, hid_t aapl_id, hid_t lapl_id));
GOTCHA_WRAP(H5Dflush, herr_t, (hid_t dset_id));
GOTCHA_WRAP(H5LTmake_dataset_float, herr_t, (hid_t loc_id, const char *dset_name, int rank, const hsize_t *dims, const float *buffer));
GOTCHA_WRAP(H5Pget_mpio_no_collective_cause, herr_t, (hid_t plist_id, uint32_t *local_no_collective_cause, uint32_t *global_no_collective_cause));
GOTCHA_WRAP(H5Tflush, herr_t, (hid_t type_id));
GOTCHA_WRAP(H5Pget_mpio_actual_chunk_opt_mode, herr_t, (hid_t plist_id, H5D_mpio_actual_chunk_opt_mode_t *actual_chunk_opt_mode));
GOTCHA_WRAP(H5PTget_type, hid_t, (hid_t table_id));
GOTCHA_WRAP(H5Gmove2, herr_t, (hid_t src_loc_id, const char *src_name, hid_t dst_loc_id, const char *dst_name));
GOTCHA_WRAP(H5Pset_fapl_ros3_token, herr_t, (hid_t fapl_id, const char *token));
GOTCHA_WRAP(H5LDget_dset_elmts, herr_t, (hid_t did, const hsize_t *prev_dims, const hsize_t *cur_dims, const char *fields, void *buf));
GOTCHA_WRAP(H5Pset_scaleoffset, herr_t, (hid_t plist_id, H5Z_SO_scale_type_t scale_type, int scale_factor));
GOTCHA_WRAP(H5Premove, herr_t, (hid_t plist_id, const char *name));
GOTCHA_WRAP(H5Fis_hdf5, htri_t, (const char *file_name));
GOTCHA_WRAP(H5Aopen_by_name, hid_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hid_t aapl_id, hid_t lapl_id));
GOTCHA_WRAP(H5Eget_auto2, herr_t, (hid_t estack_id, H5E_auto2_t *func, void **client_data));
GOTCHA_WRAP(H5Pget_core_write_tracking, herr_t, (hid_t fapl_id, hbool_t *is_enabled, size_t *page_size));
GOTCHA_WRAP(H5Sselect_intersect_block, htri_t, (hid_t space_id, const hsize_t *start, const hsize_t *end));
GOTCHA_WRAP(H5Sextent_equal, htri_t, (hid_t space1_id, hid_t space2_id));
GOTCHA_WRAP(H5Pget_virtual_srcspace, hid_t, (hid_t dcpl_id, size_t index));
GOTCHA_WRAP(H5LTget_dataset_info, herr_t, (hid_t loc_id, const char *dset_name, hsize_t *dims, H5T_class_t *type_class, size_t *type_size));
GOTCHA_WRAP(H5Fget_free_sections, ssize_t, (hid_t file_id, H5F_mem_t type, size_t nsects, H5F_sect_info_t *sect_info));
GOTCHA_WRAP(H5Tset_size, herr_t, (hid_t type_id, size_t size));
GOTCHA_WRAP(H5Rget_obj_type3, herr_t, (H5R_ref_t *ref_ptr, hid_t rapl_id, H5O_type_t *obj_type));
GOTCHA_WRAP(H5TBAget_title, herr_t, (hid_t loc_id, char *table_title));
GOTCHA_WRAP(H5garbage_collect, herr_t, (void));
GOTCHA_WRAP(H5Pget_char_encoding, herr_t, (hid_t plist_id, H5T_cset_t *encoding));
GOTCHA_WRAP(H5Lget_val, herr_t, (hid_t loc_id, const char *name, void *buf, size_t size, hid_t lapl_id));
GOTCHA_WRAP(H5Pregister1, herr_t, (hid_t cls_id, const char *name, size_t size, void *def_value, H5P_prp_create_func_t prp_create, H5P_prp_set_func_t prp_set, H5P_prp_get_func_t prp_get, H5P_prp_delete_func_t prp_del, H5P_prp_copy_func_t prp_copy, H5P_prp_close_func_t prp_close));
GOTCHA_WRAP(H5Aget_info_by_name, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, H5A_info_t *ainfo, hid_t lapl_id));
GOTCHA_WRAP(H5Pget_file_space_page_size, herr_t, (hid_t plist_id, hsize_t *fsp_size));
GOTCHA_WRAP(H5Pregister2, herr_t, (hid_t cls_id, const char *name, size_t size, void *def_value, H5P_prp_create_func_t create, H5P_prp_set_func_t set, H5P_prp_get_func_t get, H5P_prp_delete_func_t prp_del, H5P_prp_copy_func_t copy, H5P_prp_compare_func_t compare, H5P_prp_close_func_t close));
GOTCHA_WRAP(H5Idec_ref, int, (hid_t id));
GOTCHA_WRAP(H5Pset_vol, herr_t, (hid_t plist_id, hid_t new_vol_id, const void *new_vol_info));
GOTCHA_WRAP(H5PLset_loading_state, herr_t, (unsigned int plugin_control_mask));
GOTCHA_WRAP(H5Iis_valid, htri_t, (hid_t id));
GOTCHA_WRAP(H5LTget_attribute_string, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, char *data));
GOTCHA_WRAP(H5Screate, hid_t, (H5S_class_t type));
GOTCHA_WRAP(H5DSget_num_scales, int, (hid_t did, unsigned int idx));
GOTCHA_WRAP(H5EScreate, hid_t, (void));
GOTCHA_WRAP(H5LTget_attribute_info, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hsize_t *dims, H5T_class_t *type_class, size_t *type_size));
GOTCHA_WRAP(H5Eclear2, herr_t, (hid_t err_stack));
GOTCHA_WRAP(H5Pget_object_flush_cb, herr_t, (hid_t plist_id, H5F_flush_cb_t *func, void **udata));
GOTCHA_WRAP(H5Pset_shared_mesg_nindexes, herr_t, (hid_t plist_id, unsigned nindexes));
GOTCHA_WRAP(H5Pget_driver, hid_t, (hid_t plist_id));
GOTCHA_WRAP(H5Gget_linkval, herr_t, (hid_t loc_id, const char *name, size_t size, char *buf));
GOTCHA_WRAP(H5LTread_dataset_float, herr_t, (hid_t loc_id, const char *dset_name, float *buffer));
GOTCHA_WRAP(H5Oincr_refcount, herr_t, (hid_t object_id));
GOTCHA_WRAP(H5PTclose, herr_t, (hid_t table_id));
GOTCHA_WRAP(H5Pget_elink_file_cache_size, herr_t, (hid_t plist_id, unsigned *efc_size));
GOTCHA_WRAP(H5TBinsert_field, herr_t, (hid_t loc_id, const char *dset_name, const char *field_name, hid_t field_type, hsize_t position, const void *fill_data, const void *buf));
GOTCHA_WRAP(H5Fincrement_filesize, herr_t, (hid_t file_id, hsize_t increment));
GOTCHA_WRAP(H5Pget_btree_ratios, herr_t, (hid_t plist_id, double *left, double *middle, double *right));
GOTCHA_WRAP(H5Fget_dset_no_attrs_hint, herr_t, (hid_t file_id, hbool_t *minimize));
GOTCHA_WRAP(H5Pset_elink_fapl, herr_t, (hid_t lapl_id, hid_t fapl_id));
GOTCHA_WRAP(H5VLregister_connector_by_value, hid_t, (H5VL_class_value_t connector_value, hid_t vipl_id));
GOTCHA_WRAP(H5Pinsert1, herr_t, (hid_t plist_id, const char *name, size_t size, void *value, H5P_prp_set_func_t prp_set, H5P_prp_get_func_t prp_get, H5P_prp_delete_func_t prp_delete, H5P_prp_copy_func_t prp_copy, H5P_prp_close_func_t prp_close));
GOTCHA_WRAP(H5Pset_file_space_page_size, herr_t, (hid_t plist_id, hsize_t fsp_size));
GOTCHA_WRAP(H5Pget_nfilters, int, (hid_t plist_id));
GOTCHA_WRAP(H5Sget_select_type, H5S_sel_type, (hid_t spaceid));
GOTCHA_WRAP(H5Gget_create_plist, hid_t, (hid_t group_id));
GOTCHA_WRAP(H5LTset_attribute_ullong, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const unsigned long long *buffer, size_t size));
GOTCHA_WRAP(H5Rget_obj_name, ssize_t, (H5R_ref_t *ref_ptr, hid_t rapl_id, char *name, size_t size));
GOTCHA_WRAP(H5Gget_info_by_name, herr_t, (hid_t loc_id, const char *name, H5G_info_t *ginfo, hid_t lapl_id));
GOTCHA_WRAP(H5Tcreate, hid_t, (H5T_class_t type, size_t size));
GOTCHA_WRAP(H5LTread_dataset_long, herr_t, (hid_t loc_id, const char *dset_name, long *buffer));
GOTCHA_WRAP(H5PTcreate, hid_t, (hid_t loc_id, const char *dset_name, hid_t dtype_id, hsize_t chunk_size, hid_t plist_id));
GOTCHA_WRAP(H5Awrite, herr_t, (hid_t attr_id, hid_t type_id, const void *buf));
GOTCHA_WRAP(H5LTget_attribute_ulong, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, unsigned long *data));
GOTCHA_WRAP(H5Pset_alloc_time, herr_t, (hid_t plist_id, H5D_alloc_time_t alloc_time));
GOTCHA_WRAP(H5Pget_hyper_vector_size, herr_t, (hid_t fapl_id, size_t *size));
GOTCHA_WRAP(H5VLis_connector_registered_by_value, htri_t, (H5VL_class_value_t connector_value));
GOTCHA_WRAP(H5Dget_space, hid_t, (hid_t dset_id));
GOTCHA_WRAP(H5Otoken_to_str, herr_t, (hid_t loc_id, const H5O_token_t *token, char **token_str));
GOTCHA_WRAP(H5DSiterate_scales, herr_t, (hid_t did, unsigned int dim, int *idx, H5DS_iterate_t visitor, void *visitor_data));
GOTCHA_WRAP(H5Pset, herr_t, (hid_t plist_id, const char *name, const void *value));
GOTCHA_WRAP(H5Diterate, herr_t, (void *buf, hid_t type_id, hid_t space_id, H5D_operator_t op, void *operator_data));
GOTCHA_WRAP(H5Pset_fletcher32, herr_t, (hid_t plist_id));
GOTCHA_WRAP(H5Pget_fapl_family, herr_t, (hid_t fapl_id, hsize_t *memb_size, hid_t *memb_fapl_id));
GOTCHA_WRAP(H5Pget_attr_creation_order, herr_t, (hid_t plist_id, unsigned *crt_order_flags));
GOTCHA_WRAP(H5Pcopy_prop, herr_t, (hid_t dst_id, hid_t src_id, const char *name));
GOTCHA_WRAP(H5Lget_info_by_idx1, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5L_info1_t *linfo, hid_t lapl_id));
GOTCHA_WRAP(H5Aget_space, hid_t, (hid_t attr_id));
GOTCHA_WRAP(H5Aget_name_by_idx, ssize_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, char *name, size_t size, hid_t lapl_id));
GOTCHA_WRAP(H5Dget_space_status, herr_t, (hid_t dset_id, H5D_space_status_t *allocation));
GOTCHA_WRAP(H5Aget_create_plist, hid_t, (hid_t attr_id));
GOTCHA_WRAP(H5ESget_op_counter, herr_t, (hid_t es_id, uint64_t *counter));
GOTCHA_WRAP(H5LTset_attribute_float, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const float *buffer, size_t size));
GOTCHA_WRAP(H5Pget_elink_fapl, hid_t, (hid_t lapl_id));
GOTCHA_WRAP(H5Pget_layout, H5D_layout_t, (hid_t plist_id));
GOTCHA_WRAP(H5Freset_page_buffering_stats, herr_t, (hid_t file_id));
GOTCHA_WRAP(H5Pget_fill_value, herr_t, (hid_t plist_id, hid_t type_id, void *value));
GOTCHA_WRAP(H5Pset_small_data_block_size, herr_t, (hid_t fapl_id, hsize_t size));
GOTCHA_WRAP(H5Sget_simple_extent_npoints, hssize_t, (hid_t space_id));
GOTCHA_WRAP(H5Lget_info2, herr_t, (hid_t loc_id, const char *name, H5L_info2_t *linfo, hid_t lapl_id));
GOTCHA_WRAP(H5Pget_sieve_buf_size, herr_t, (hid_t fapl_id, size_t *size));
GOTCHA_WRAP(H5Fget_filesize, herr_t, (hid_t file_id, hsize_t *size));
GOTCHA_WRAP(H5Lget_info1, herr_t, (hid_t loc_id, const char *name, H5L_info1_t *linfo, hid_t lapl_id));
GOTCHA_WRAP(H5Pget_mdc_image_config, herr_t, (hid_t plist_id, H5AC_cache_image_config_t *config_ptr));
GOTCHA_WRAP(H5Oget_comment_by_name, ssize_t, (hid_t loc_id, const char *name, char *comment, size_t bufsize, hid_t lapl_id));
GOTCHA_WRAP(H5Sget_simple_extent_type, H5S_class_t, (hid_t space_id));
GOTCHA_WRAP(H5Pset_nbit, herr_t, (hid_t plist_id));
GOTCHA_WRAP(H5Pset_meta_block_size, herr_t, (hid_t fapl_id, hsize_t size));
GOTCHA_WRAP(H5Fget_access_plist, hid_t, (hid_t file_id));
GOTCHA_WRAP(H5Dset_extent, herr_t, (hid_t dset_id, const hsize_t size[]));
GOTCHA_WRAP(H5LTset_attribute_char, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const char *buffer, size_t size));
GOTCHA_WRAP(H5Pget_sym_k, herr_t, (hid_t plist_id, unsigned *ik, unsigned *lk));
GOTCHA_WRAP(H5Dget_offset, haddr_t, (hid_t dset_id));
GOTCHA_WRAP(H5LTget_attribute_ushort, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, unsigned short *data));
GOTCHA_WRAP(H5Pget_filter2, H5Z_filter_t, (hid_t plist_id, unsigned idx, unsigned int *flags, size_t *cd_nelmts, unsigned cd_values[], size_t namelen, char name[], unsigned *filter_config));
GOTCHA_WRAP(H5Pget_attr_phase_change, herr_t, (hid_t plist_id, unsigned *max_compact, unsigned *min_dense));
GOTCHA_WRAP(H5Pget_evict_on_close, herr_t, (hid_t fapl_id, hbool_t *evict_on_close));
GOTCHA_WRAP(H5LTget_attribute_short, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, short *data));
GOTCHA_WRAP(H5Pset_object_flush_cb, herr_t, (hid_t plist_id, H5F_flush_cb_t func, void *udata));
GOTCHA_WRAP(H5Screate_simple, hid_t, (int rank, const hsize_t dims[], const hsize_t maxdims[]));
GOTCHA_WRAP(H5Pset_fill_time, herr_t, (hid_t plist_id, H5D_fill_time_t fill_time));
GOTCHA_WRAP(H5Sget_regular_hyperslab, htri_t, (hid_t spaceid, hsize_t start[], hsize_t stride[], hsize_t count[], hsize_t block[]));
GOTCHA_WRAP(H5Pget_mdc_log_options, herr_t, (hid_t plist_id, hbool_t *is_enabled, char *location, size_t *location_size, hbool_t *start_on_access));
GOTCHA_WRAP(H5Pisa_class, htri_t, (hid_t plist_id, hid_t pclass_id));
GOTCHA_WRAP(H5Ssel_iter_reset, herr_t, (hid_t sel_iter_id, hid_t space_id));
GOTCHA_WRAP(H5Pcreate_class, hid_t, (hid_t parent, const char *name, H5P_cls_create_func_t create, void *create_data, H5P_cls_copy_func_t copy, void *copy_data, H5P_cls_close_func_t close, void *close_data));
GOTCHA_WRAP(H5Tclose, herr_t, (hid_t type_id));
GOTCHA_WRAP(H5Pset_core_write_tracking, herr_t, (hid_t fapl_id, hbool_t is_enabled, size_t page_size));
GOTCHA_WRAP(H5Sselect_all, herr_t, (hid_t spaceid));
GOTCHA_WRAP(H5LTread_dataset_short, herr_t, (hid_t loc_id, const char *dset_name, short *buffer));
GOTCHA_WRAP(H5Ewalk1, herr_t, (H5E_direction_t direction, H5E_walk1_t func, void *client_data));
GOTCHA_WRAP(H5Soffset_simple, herr_t, (hid_t space_id, const hssize_t *offset));
GOTCHA_WRAP(H5Fget_freespace, hssize_t, (hid_t file_id));
GOTCHA_WRAP(H5Aget_type, hid_t, (hid_t attr_id));
GOTCHA_WRAP(H5Pget_shared_mesg_index, herr_t, (hid_t plist_id, unsigned index_num, unsigned *mesg_type_flags, unsigned *min_mesg_size));
GOTCHA_WRAP(H5Gget_info, herr_t, (hid_t loc_id, H5G_info_t *ginfo));
GOTCHA_WRAP(H5Fget_obj_ids, ssize_t, (hid_t file_id, unsigned types, size_t max_objs, hid_t *obj_id_list));
GOTCHA_WRAP(H5Pget_fapl_ros3_token, herr_t, (hid_t fapl_id, size_t size, char *token));
GOTCHA_WRAP(H5Arename, herr_t, (hid_t loc_id, const char *old_name, const char *new_name));
GOTCHA_WRAP(H5DSis_scale, htri_t, (hid_t did));
GOTCHA_WRAP(H5get_libversion, herr_t, (unsigned *majnum, unsigned *minnum, unsigned *relnum));
GOTCHA_WRAP(H5Pget_nlinks, herr_t, (hid_t plist_id, size_t *nlinks));
GOTCHA_WRAP(H5Oget_info2, herr_t, (hid_t loc_id, H5O_info1_t *oinfo, unsigned fields));
GOTCHA_WRAP(H5Pset_create_intermediate_group, herr_t, (hid_t plist_id, unsigned crt_intmd));
GOTCHA_WRAP(H5Pget_file_locking, herr_t, (hid_t fapl_id, hbool_t *use_file_locking, hbool_t *ignore_when_disabled));
GOTCHA_WRAP(H5Pget_virtual_filename, ssize_t, (hid_t dcpl_id, size_t index, char *name, size_t size));
GOTCHA_WRAP(H5Oget_info_by_idx3, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5O_info2_t *oinfo, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Pset_fapl_core, herr_t, (hid_t fapl_id, size_t increment, hbool_t backing_store));
GOTCHA_WRAP(H5Pset_mpi_params, herr_t, (hid_t fapl_id, MPI_Comm comm, MPI_Info info));
GOTCHA_WRAP(H5Glink2, herr_t, (hid_t cur_loc_id, const char *cur_name, H5L_type_t type, hid_t new_loc_id, const char *new_name));
GOTCHA_WRAP(H5Oget_info_by_idx2, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5O_info1_t *oinfo, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Rcreate_object, herr_t, (hid_t loc_id, const char *name, hid_t oapl_id, H5R_ref_t *ref_ptr));
GOTCHA_WRAP(H5Ovisit_by_name3, herr_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, H5O_iterate2_t op, void *op_data, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Pencode1, herr_t, (hid_t plist_id, void *buf, size_t *nalloc));
GOTCHA_WRAP(H5Pset_fapl_family, herr_t, (hid_t fapl_id, hsize_t memb_size, hid_t memb_fapl_id));
GOTCHA_WRAP(H5LRread_region, herr_t, (hid_t obj_id, const hdset_reg_ref_t *ref, hid_t mem_type, size_t *numelem, void *buf));
GOTCHA_WRAP(H5Pset_elink_prefix, herr_t, (hid_t plist_id, const char *prefix));
GOTCHA_WRAP(H5Pset_family_offset, herr_t, (hid_t fapl_id, hsize_t offset));
GOTCHA_WRAP(H5Pget_external, herr_t, (hid_t plist_id, unsigned idx, size_t name_size, char *name, off_t *offset, hsize_t *size));
GOTCHA_WRAP(H5VLobject_is_native, herr_t, (hid_t obj_id, hbool_t *is_native));
GOTCHA_WRAP(H5TBwrite_fields_index, herr_t, (hid_t loc_id, const char *dset_name, hsize_t nfields, const int *field_index, hsize_t start, hsize_t nrecords, size_t type_size, const size_t *field_offset, const size_t *dst_sizes, const void *buf));
GOTCHA_WRAP(H5LTread_dataset_char, herr_t, (hid_t loc_id, const char *dset_name, char *buffer));
GOTCHA_WRAP(H5Pset_sym_k, herr_t, (hid_t plist_id, unsigned ik, unsigned lk));
GOTCHA_WRAP(H5DSwith_new_ref, herr_t, (hid_t obj_id, hbool_t *with_new_ref));
GOTCHA_WRAP(H5Iregister_future, hid_t, (H5I_type_t type, const void *object, H5I_future_realize_func_t realize_cb, H5I_future_discard_func_t discard_cb));
GOTCHA_WRAP(H5Pget_relax_file_integrity_checks, herr_t, (hid_t plist_id, uint64_t *flags));
GOTCHA_WRAP(H5Tlock, herr_t, (hid_t type_id));
GOTCHA_WRAP(H5VLunregister_connector, herr_t, (hid_t connector_id));
GOTCHA_WRAP(H5Pget_istore_k, herr_t, (hid_t plist_id, unsigned *ik));
GOTCHA_WRAP(H5VLis_connector_registered_by_name, htri_t, (const char *name));
GOTCHA_WRAP(H5Fget_page_buffering_stats, herr_t, (hid_t file_id, unsigned accesses[2], unsigned hits[2], unsigned misses[2], unsigned evictions[2], unsigned bypasses[2]));
GOTCHA_WRAP(H5LTset_attribute_ushort, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const unsigned short *buffer, size_t size));
GOTCHA_WRAP(H5Pget_fapl_core, herr_t, (hid_t fapl_id, size_t *increment, hbool_t *backing_store));
GOTCHA_WRAP(H5IMget_image_info, herr_t, (hid_t loc_id, const char *dset_name, hsize_t *width, hsize_t *height, hsize_t *planes, char *interlace, hssize_t *npals));
GOTCHA_WRAP(H5ESget_count, herr_t, (hid_t es_id, size_t *count));
GOTCHA_WRAP(H5Tget_size, size_t, (hid_t type_id));
GOTCHA_WRAP(H5Pset_metadata_read_attempts, herr_t, (hid_t plist_id, unsigned attempts));
GOTCHA_WRAP(H5Pset_file_locking, herr_t, (hid_t fapl_id, hbool_t use_file_locking, hbool_t ignore_when_disabled));
GOTCHA_WRAP(H5Arename_by_name, herr_t, (hid_t loc_id, const char *obj_name, const char *old_attr_name, const char *new_attr_name, hid_t lapl_id));
GOTCHA_WRAP(H5Aexists_by_name, htri_t, (hid_t obj_id, const char *obj_name, const char *attr_name, hid_t lapl_id));
GOTCHA_WRAP(H5Eget_major, char *, (H5E_major_t maj));
GOTCHA_WRAP(H5Pencode2, herr_t, (hid_t plist_id, void *buf, size_t *nalloc, hid_t fapl_id));
GOTCHA_WRAP(H5Pset_filter, herr_t, (hid_t plist_id, H5Z_filter_t filter, unsigned int flags, size_t cd_nelmts, const unsigned int c_values[]));
GOTCHA_WRAP(H5Sset_extent_none, herr_t, (hid_t space_id));
GOTCHA_WRAP(H5Gopen2, hid_t, (hid_t loc_id, const char *name, hid_t gapl_id));
GOTCHA_WRAP(H5Tcommit2, herr_t, (hid_t loc_id, const char *name, hid_t type_id, hid_t lcpl_id, hid_t tcpl_id, hid_t tapl_id));
GOTCHA_WRAP(H5Dread_multi, herr_t, (size_t count, hid_t dset_id[], hid_t mem_type_id[], hid_t mem_space_id[], hid_t file_space_id[], hid_t dxpl_id, void *buf[]));
GOTCHA_WRAP(H5Aexists, htri_t, (hid_t obj_id, const char *attr_name));
GOTCHA_WRAP(H5LTget_attribute_long_long, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, long long *data));
GOTCHA_WRAP(H5Dscatter, herr_t, (H5D_scatter_func_t op, void *op_data, hid_t type_id, hid_t dst_space_id, void *dst_buf));
GOTCHA_WRAP(H5Fset_dset_no_attrs_hint, herr_t, (hid_t file_id, hbool_t minimize));
GOTCHA_WRAP(H5Pset_elink_cb, herr_t, (hid_t lapl_id, H5L_elink_traverse_t func, void *op_data));
GOTCHA_WRAP(H5Pget_file_space_strategy, herr_t, (hid_t plist_id, H5F_fspace_strategy_t *strategy, hbool_t *persist, hsize_t *threshold));
GOTCHA_WRAP(H5Premove_filter, herr_t, (hid_t plist_id, H5Z_filter_t filter));
GOTCHA_WRAP(H5Dget_chunk_storage_size, herr_t, (hid_t dset_id, const hsize_t *offset, hsize_t *chunk_bytes));
GOTCHA_WRAP(H5Oget_info_by_name1, herr_t, (hid_t loc_id, const char *name, H5O_info1_t *oinfo, hid_t lapl_id));
GOTCHA_WRAP(H5PTis_varlen, herr_t, (hid_t table_id));
GOTCHA_WRAP(H5Pset_fclose_degree, herr_t, (hid_t fapl_id, H5F_close_degree_t degree));
GOTCHA_WRAP(H5LRget_region_info, herr_t, (hid_t obj_id, const hdset_reg_ref_t *ref, size_t *len, char *path, int *rank, hid_t *dtype, H5S_sel_type *sel_type, size_t *numelem, hsize_t *buf));
GOTCHA_WRAP(H5LTpath_valid, htri_t, (hid_t loc_id, const char *path, hbool_t check_object_valid));
GOTCHA_WRAP(H5Topen_async, hid_t, (hid_t loc_id, const char *name, hid_t tapl_id, hid_t es_id));
GOTCHA_WRAP(H5Pset_mcdt_search_cb, herr_t, (hid_t plist_id, H5O_mcdt_search_cb_t func, void *op_data));
GOTCHA_WRAP(H5Zget_filter_info, herr_t, (H5Z_filter_t filter, unsigned int *filter_config_flags));
GOTCHA_WRAP(H5Pget_fapl_direct, herr_t, (hid_t fapl_id, size_t *boundary, size_t *block_size, size_t *cbuf_size));
GOTCHA_WRAP(H5VLget_connector_name, ssize_t, (hid_t id, char *name, size_t size));
GOTCHA_WRAP(H5Oget_info_by_name2, herr_t, (hid_t loc_id, const char *name, H5O_info1_t *oinfo, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Tget_super, hid_t, (hid_t type));
GOTCHA_WRAP(H5Eget_auto1, herr_t, (H5E_auto1_t *func, void **client_data));
GOTCHA_WRAP(H5Rget_attr_name, ssize_t, (const H5R_ref_t *ref_ptr, char *name, size_t size));
GOTCHA_WRAP(H5Pget_virtual_vspace, hid_t, (hid_t dcpl_id, size_t index));
GOTCHA_WRAP(H5Ovisit2, herr_t, (hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order, H5O_iterate1_t op, void *op_data, unsigned fields));
GOTCHA_WRAP(H5Gcreate2, hid_t, (hid_t loc_id, const char *name, hid_t lcpl_id, hid_t gcpl_id, hid_t gapl_id));
GOTCHA_WRAP(H5PTis_valid, herr_t, (hid_t table_id));
GOTCHA_WRAP(H5Dvlen_reclaim, herr_t, (hid_t type_id, hid_t space_id, hid_t dxpl_id, void *buf));
GOTCHA_WRAP(H5VLregister_connector_by_name, hid_t, (const char *connector_name, hid_t vipl_id));
GOTCHA_WRAP(H5LTread_dataset_double, herr_t, (hid_t loc_id, const char *dset_name, double *buffer));
GOTCHA_WRAP(H5Iget_file_id, hid_t, (hid_t id));
GOTCHA_WRAP(H5Dchunk_iter, herr_t, (hid_t dset_id, hid_t dxpl_id, H5D_chunk_iter_op_t cb, void *op_data));
GOTCHA_WRAP(H5Ldelete, herr_t, (hid_t loc_id, const char *name, hid_t lapl_id));
GOTCHA_WRAP(H5IMread_image, herr_t, (hid_t loc_id, const char *dset_name, unsigned char *buffer));
GOTCHA_WRAP(H5Gflush, herr_t, (hid_t group_id));
GOTCHA_WRAP(H5PTopen, hid_t, (hid_t loc_id, const char *dset_name));
GOTCHA_WRAP(H5Gcreate_anon, hid_t, (hid_t loc_id, hid_t gcpl_id, hid_t gapl_id));
GOTCHA_WRAP(H5PTget_index, herr_t, (hid_t table_id, hsize_t *pt_index));
GOTCHA_WRAP(H5LRcreate_ref_to_all, herr_t, (hid_t loc_id, const char *group_path, const char *ds_path, H5_index_t index_type, H5_iter_order_t order, H5R_type_t ref_type));
GOTCHA_WRAP(H5TBread_records, herr_t, (hid_t loc_id, const char *dset_name, hsize_t start, hsize_t nrecords, size_t type_size, const size_t *dst_offset, const size_t *dst_sizes, void *buf));
GOTCHA_WRAP(H5Pcreate, hid_t, (hid_t cls_id));
GOTCHA_WRAP(H5Pget_page_buffer_size, herr_t, (hid_t plist_id, size_t *buf_size, unsigned *min_meta_perc, unsigned *min_raw_perc));
GOTCHA_WRAP(H5Pset_gc_references, herr_t, (hid_t fapl_id, unsigned gc_ref));
GOTCHA_WRAP(H5close, herr_t, (void));
GOTCHA_WRAP(H5Fdelete, herr_t, (const char *filename, hid_t fapl_id));
GOTCHA_WRAP(H5Sclose, herr_t, (hid_t space_id));
GOTCHA_WRAP(H5Oflush, herr_t, (hid_t obj_id));
GOTCHA_WRAP(H5Pget_file_space, herr_t, (hid_t plist_id, H5F_file_space_type_t *strategy, hsize_t *threshold));
GOTCHA_WRAP(H5DSset_label, herr_t, (hid_t did, unsigned int idx, const char *label));
GOTCHA_WRAP(H5Aopen, hid_t, (hid_t obj_id, const char *attr_name, hid_t aapl_id));
GOTCHA_WRAP(H5Sset_extent_simple, herr_t, (hid_t space_id, int rank, const hsize_t dims[], const hsize_t max[]));
GOTCHA_WRAP(H5Pinsert2, herr_t, (hid_t plist_id, const char *name, size_t size, void *value, H5P_prp_set_func_t set, H5P_prp_get_func_t get, H5P_prp_delete_func_t prp_del, H5P_prp_copy_func_t copy, H5P_prp_compare_func_t compare, H5P_prp_close_func_t close));
GOTCHA_WRAP(H5PTset_index, herr_t, (hid_t table_id, hsize_t pt_index));
GOTCHA_WRAP(H5Dgather, herr_t, (hid_t src_space_id, const void *src_buf, hid_t type_id, size_t dst_buf_size, void *dst_buf, H5D_gather_func_t op, void *op_data));
GOTCHA_WRAP(H5Pget_fapl_mpio, herr_t, (hid_t fapl_id, MPI_Comm *comm, MPI_Info *info));
GOTCHA_WRAP(H5Pset_dxpl_mpio_chunk_opt_num, herr_t, (hid_t dxpl_id, unsigned num_chunk_per_proc));
GOTCHA_WRAP(H5LTread_region, herr_t, (const char *file, const char *path, const hsize_t *block_coord, hid_t mem_type, void *buf));
GOTCHA_WRAP(H5Sextent_copy, herr_t, (hid_t dst_id, hid_t src_id));
GOTCHA_WRAP(H5Lget_info_by_idx2, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5L_info2_t *linfo, hid_t lapl_id));
GOTCHA_WRAP(H5Sget_select_bounds, herr_t, (hid_t spaceid, hsize_t start[], hsize_t end[]));
GOTCHA_WRAP(H5Pget_filter_by_id1, herr_t, (hid_t plist_id, H5Z_filter_t id, unsigned int *flags, size_t *cd_nelmts, unsigned cd_values[], size_t namelen, char name[]));
GOTCHA_WRAP(H5Aopen_by_idx, hid_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, hid_t aapl_id, hid_t lapl_id));
GOTCHA_WRAP(H5LTset_attribute_long, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const long *buffer, size_t size));
GOTCHA_WRAP(H5Pget_shared_mesg_phase_change, herr_t, (hid_t plist_id, unsigned *max_list, unsigned *min_btree));
GOTCHA_WRAP(H5PLget_loading_state, herr_t, (unsigned int *plugin_control_mask));
GOTCHA_WRAP(H5Pset_data_transform, herr_t, (hid_t plist_id, const char *expression));
GOTCHA_WRAP(H5Eclear1, herr_t, (void));
GOTCHA_WRAP(H5Pset_elink_acc_flags, herr_t, (hid_t lapl_id, unsigned flags));
GOTCHA_WRAP(H5Drefresh, herr_t, (hid_t dset_id));
GOTCHA_WRAP(H5Odisable_mdc_flushes, herr_t, (hid_t object_id));
GOTCHA_WRAP(H5LTget_attribute_float, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, float *data));
GOTCHA_WRAP(H5LTmake_dataset_int, herr_t, (hid_t loc_id, const char *dset_name, int rank, const hsize_t *dims, const int *buffer));
GOTCHA_WRAP(H5Pdecode, hid_t, (const void *buf));
GOTCHA_WRAP(H5LTget_attribute_uchar, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, unsigned char *data));
GOTCHA_WRAP(H5Fget_info2, herr_t, (hid_t obj_id, H5F_info2_t *file_info));
GOTCHA_WRAP(H5Oopen_by_idx, hid_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, hid_t lapl_id));
GOTCHA_WRAP(H5Gget_info_by_idx, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5G_info_t *ginfo, hid_t lapl_id));
GOTCHA_WRAP(H5LTget_attribute_ndims, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, int *rank));
GOTCHA_WRAP(H5DOappend, herr_t, (hid_t dset_id, hid_t dxpl_id, unsigned axis, size_t extension, hid_t memtype, const void *buf));
GOTCHA_WRAP(H5Tclose_async, herr_t, (hid_t type_id, hid_t es_id));
GOTCHA_WRAP(H5LTread_dataset_int, herr_t, (hid_t loc_id, const char *dset_name, int *buffer));
GOTCHA_WRAP(H5Rdereference1, hid_t, (hid_t obj_id, H5R_type_t ref_type, const void *ref));
GOTCHA_WRAP(H5LDget_dset_dims, herr_t, (hid_t did, hsize_t *cur_dims));
GOTCHA_WRAP(H5Sget_select_hyper_blocklist, herr_t, (hid_t spaceid, hsize_t startblock, hsize_t numblocks, hsize_t buf[]));
GOTCHA_WRAP(H5Pget_driver_info, const void *, (hid_t plist_id));
GOTCHA_WRAP(H5Sencode2, herr_t, (hid_t obj_id, void *buf, size_t *nalloc, hid_t fapl));
GOTCHA_WRAP(H5Lcreate_ud, herr_t, (hid_t link_loc_id, const char *link_name, H5L_type_t link_type, const void *udata, size_t udata_size, hid_t lcpl_id, hid_t lapl_id));
GOTCHA_WRAP(H5Tcopy, hid_t, (hid_t type_id));
GOTCHA_WRAP(H5Dget_storage_size, hsize_t, (hid_t dset_id));
GOTCHA_WRAP(H5Dopen1, hid_t, (hid_t loc_id, const char *name));
GOTCHA_WRAP(H5Pget_elink_cb, herr_t, (hid_t lapl_id, H5L_elink_traverse_t *func, void **op_data));
GOTCHA_WRAP(H5LTmake_dataset_char, herr_t, (hid_t loc_id, const char *dset_name, int rank, const hsize_t *dims, const char *buffer));
GOTCHA_WRAP(H5Pget_meta_block_size, herr_t, (hid_t fapl_id, hsize_t *size));
GOTCHA_WRAP(H5Eappend_stack, herr_t, (hid_t dst_stack_id, hid_t src_stack_id, hbool_t close_source_stack));
GOTCHA_WRAP(H5Pset_nlinks, herr_t, (hid_t plist_id, size_t nlinks));
GOTCHA_WRAP(H5Pset_copy_object, herr_t, (hid_t plist_id, unsigned copy_options));
GOTCHA_WRAP(H5Smodify_select, herr_t, (hid_t space1_id, H5S_seloper_t op, hid_t space2_id));
GOTCHA_WRAP(H5Pget_shared_mesg_nindexes, herr_t, (hid_t plist_id, unsigned *nindexes));
GOTCHA_WRAP(H5Lcreate_soft, herr_t, (const char *link_target, hid_t link_loc_id, const char *link_name, hid_t lcpl_id, hid_t lapl_id));
GOTCHA_WRAP(H5DSget_scale_name, ssize_t, (hid_t did, char *name, size_t size));
GOTCHA_WRAP(H5Pget_mdc_config, herr_t, (hid_t plist_id, H5AC_cache_config_t *config_ptr));
GOTCHA_WRAP(H5LTfind_attribute, herr_t, (hid_t loc_id, const char *name));
GOTCHA_WRAP(H5TBdelete_record, herr_t, (hid_t loc_id, const char *dset_name, hsize_t start, hsize_t nrecords));
GOTCHA_WRAP(H5Pget_class_name, char *, (hid_t pclass_id));
GOTCHA_WRAP(H5Pset_sizes, herr_t, (hid_t plist_id, size_t sizeof_addr, size_t sizeof_size));
GOTCHA_WRAP(H5Pset_fapl_mpio, herr_t, (hid_t fapl_id, MPI_Comm comm, MPI_Info info));
GOTCHA_WRAP(H5Pget_all_coll_metadata_ops, herr_t, (hid_t plist_id, hbool_t *is_collective));
GOTCHA_WRAP(H5Funmount, herr_t, (hid_t loc, const char *name));
GOTCHA_WRAP(H5Eset_auto1, herr_t, (H5E_auto1_t func, void *client_data));
GOTCHA_WRAP(H5Pset_char_encoding, herr_t, (hid_t plist_id, H5T_cset_t encoding));
GOTCHA_WRAP(H5Pget_version, herr_t, (hid_t plist_id, unsigned *boot, unsigned *freelist, unsigned *stab, unsigned *shhdr));
GOTCHA_WRAP(H5Gget_objtype_by_idx, H5G_obj_t, (hid_t loc_id, hsize_t idx));
GOTCHA_WRAP(H5is_library_terminating, herr_t, (hbool_t *is_terminating));
GOTCHA_WRAP(H5IMget_npalettes, herr_t, (hid_t loc_id, const char *image_name, hssize_t *npals));
GOTCHA_WRAP(H5Fis_accessible, htri_t, (const char *container_name, hid_t fapl_id));
GOTCHA_WRAP(H5open, herr_t, (void));
GOTCHA_WRAP(H5ESget_err_status, herr_t, (hid_t es_id, hbool_t *err_occurred));
GOTCHA_WRAP(H5Pset_mdc_config, herr_t, (hid_t plist_id, H5AC_cache_config_t *config_ptr));
GOTCHA_WRAP(H5Oset_comment, herr_t, (hid_t obj_id, const char *comment));
GOTCHA_WRAP(H5LTget_attribute_char, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, char *data));
GOTCHA_WRAP(H5Pset_fapl_sec2, herr_t, (hid_t fapl_id));
GOTCHA_WRAP(H5Pget_type_conv_cb, herr_t, (hid_t dxpl_id, H5T_conv_except_func_t *op, void **operate_data));
GOTCHA_WRAP(H5PLappend, herr_t, (const char *search_path));
GOTCHA_WRAP(H5Sselect_elements, herr_t, (hid_t space_id, H5S_seloper_t op, size_t num_elem, const hsize_t *coord));
GOTCHA_WRAP(H5Fopen, hid_t, (const char *filename, unsigned flags, hid_t fapl_id));
GOTCHA_WRAP(H5Ocopy, herr_t, (hid_t src_loc_id, const char *src_name, hid_t dst_loc_id, const char *dst_name, hid_t ocpypl_id, hid_t lcpl_id));
GOTCHA_WRAP(H5DOread_chunk, herr_t, (hid_t dset_id, hid_t dxpl_id, const hsize_t *offset, uint32_t *filters, void *buf));
GOTCHA_WRAP(H5Aget_info, herr_t, (hid_t attr_id, H5A_info_t *ainfo));
GOTCHA_WRAP(H5Pget_chunk_opts, herr_t, (hid_t plist_id, unsigned *opts));
GOTCHA_WRAP(H5Aiterate_by_name, herr_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t *idx, H5A_operator2_t op, void *op_data, hid_t lapl_id));
GOTCHA_WRAP(H5LTmake_dataset_long, herr_t, (hid_t loc_id, const char *dset_name, int rank, const hsize_t *dims, const long *buffer));
GOTCHA_WRAP(H5Pset_fapl_stdio, herr_t, (hid_t fapl_id));
GOTCHA_WRAP(H5TBread_fields_name, herr_t, (hid_t loc_id, const char *dset_name, const char *field_names, hsize_t start, hsize_t nrecords, size_t type_size, const size_t *field_offset, const size_t *dst_sizes, void *buf));
GOTCHA_WRAP(H5Gget_comment, int, (hid_t loc_id, const char *name, size_t bufsize, char *buf));
GOTCHA_WRAP(H5Oopen, hid_t, (hid_t loc_id, const char *name, hid_t lapl_id));
GOTCHA_WRAP(H5Lmove, herr_t, (hid_t src_loc, const char *src_name, hid_t dst_loc, const char *dst_name, hid_t lcpl_id, hid_t lapl_id));
GOTCHA_WRAP(H5Trefresh, herr_t, (hid_t type_id));
GOTCHA_WRAP(H5Eunregister_class, herr_t, (hid_t class_id));
GOTCHA_WRAP(H5Rcopy, herr_t, (const H5R_ref_t *src_ref_ptr, H5R_ref_t *dst_ref_ptr));
GOTCHA_WRAP(H5Eget_current_stack, hid_t, (void));
GOTCHA_WRAP(H5Glink, herr_t, (hid_t cur_loc_id, H5L_type_t type, const char *cur_name, const char *new_name));
GOTCHA_WRAP(H5Pget_buffer, size_t, (hid_t plist_id, void **tconv, void **bkg));
GOTCHA_WRAP(H5IMget_palette_info, herr_t, (hid_t loc_id, const char *image_name, int pal_number, hsize_t *pal_dims));
GOTCHA_WRAP(H5Ovisit3, herr_t, (hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order, H5O_iterate2_t op, void *op_data, unsigned fields));
GOTCHA_WRAP(H5Pget_vol_info, herr_t, (hid_t plist_id, void **vol_info));
GOTCHA_WRAP(H5Pget_external_count, int, (hid_t plist_id));
GOTCHA_WRAP(H5TBappend_records, herr_t, (hid_t loc_id, const char *dset_name, hsize_t nrecords, size_t type_size, const size_t *field_offset, const size_t *dst_sizes, const void *buf));
GOTCHA_WRAP(H5Gget_objname_by_idx, ssize_t, (hid_t loc_id, hsize_t idx, char *name, size_t size));
GOTCHA_WRAP(H5IMmake_image_8bit, herr_t, (hid_t loc_id, const char *dset_name, hsize_t width, hsize_t height, const unsigned char *buffer));
GOTCHA_WRAP(H5Fget_intent, herr_t, (hid_t file_id, unsigned *intent));
GOTCHA_WRAP(H5VLwrap_register, hid_t, (void *obj, H5I_type_t type));
GOTCHA_WRAP(H5Eprint1, herr_t, (FILE *stream));
GOTCHA_WRAP(H5LTfind_dataset, herr_t, (hid_t loc_id, const char *name));
GOTCHA_WRAP(H5Tget_native_type, hid_t, (hid_t type_id, H5T_direction_t direction));
GOTCHA_WRAP(H5Dget_type, hid_t, (hid_t dset_id));
GOTCHA_WRAP(H5check_version, herr_t, (unsigned majnum, unsigned minnum, unsigned relnum));
GOTCHA_WRAP(H5ESclose, herr_t, (hid_t es_id));
GOTCHA_WRAP(H5Oare_mdc_flushes_disabled, herr_t, (hid_t object_id, hbool_t *are_disabled));
GOTCHA_WRAP(H5LTopen_file_image, hid_t, (void *buf_ptr, size_t buf_size, unsigned flags));
GOTCHA_WRAP(H5LTset_attribute_uint, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const unsigned int *buffer, size_t size));
GOTCHA_WRAP(H5Dclose, herr_t, (hid_t dset_id));
GOTCHA_WRAP(H5Aiterate2, herr_t, (hid_t loc_id, H5_index_t idx_type, H5_iter_order_t order, hsize_t *idx, H5A_operator2_t op, void *op_data));
GOTCHA_WRAP(H5Rcreate, herr_t, (void *ref, hid_t loc_id, const char *name, H5R_type_t ref_type, hid_t space_id));
GOTCHA_WRAP(H5Pget_file_image, herr_t, (hid_t fapl_id, void **buf_ptr_ptr, size_t *buf_len_ptr));
GOTCHA_WRAP(H5Pset_virtual, herr_t, (hid_t dcpl_id, hid_t vspace_id, const char *src_file_name, const char *src_dset_name, hid_t src_space_id));
GOTCHA_WRAP(H5get_free_list_sizes, herr_t, (size_t *reg_size, size_t *arr_size, size_t *blk_size, size_t *fac_size));
GOTCHA_WRAP(H5Gunlink, herr_t, (hid_t loc_id, const char *name));
GOTCHA_WRAP(H5Topen2, hid_t, (hid_t loc_id, const char *name, hid_t tapl_id));
GOTCHA_WRAP(H5Lcreate_external, herr_t, (const char *file_name, const char *obj_name, hid_t link_loc_id, const char *link_name, hid_t lcpl_id, hid_t lapl_id));
GOTCHA_WRAP(H5TBread_fields_index, herr_t, (hid_t loc_id, const char *dset_name, hsize_t nfields, const int *field_index, hsize_t start, hsize_t nrecords, size_t type_size, const size_t *field_offset, const size_t *dst_sizes, void *buf));
GOTCHA_WRAP(H5PLprepend, herr_t, (const char *search_path));
GOTCHA_WRAP(H5Fget_name, ssize_t, (hid_t obj_id, char *name, size_t size));
GOTCHA_WRAP(H5LTset_attribute_short, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, const short *buffer, size_t size));
GOTCHA_WRAP(H5LTget_attribute_ullong, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, unsigned long long *data));
GOTCHA_WRAP(H5Pclose_class, herr_t, (hid_t plist_id));
GOTCHA_WRAP(H5Oget_native_info, herr_t, (hid_t loc_id, H5O_native_info_t *oinfo, unsigned fields));
GOTCHA_WRAP(H5Otoken_from_str, herr_t, (hid_t loc_id, const char *token_str, H5O_token_t *token));
GOTCHA_WRAP(H5Pget_libver_bounds, herr_t, (hid_t plist_id, H5F_libver_t *low, H5F_libver_t *high));
GOTCHA_WRAP(H5Pset_istore_k, herr_t, (hid_t plist_id, unsigned ik));
GOTCHA_WRAP(H5Pfree_merge_committed_dtype_paths, herr_t, (hid_t plist_id));
GOTCHA_WRAP(H5ESregister_complete_func, herr_t, (hid_t es_id, H5ES_event_complete_func_t func, void *ctx));
GOTCHA_WRAP(H5Rdereference2, hid_t, (hid_t obj_id, hid_t oapl_id, H5R_type_t ref_type, const void *ref));
GOTCHA_WRAP(H5ESfree_err_info, herr_t, (size_t num_err_info, H5ES_err_info_t err_info[]));
GOTCHA_WRAP(H5LTcopy_region, herr_t, (const char *file_src, const char *path_src, const hsize_t *block_coord_src, const char *file_dest, const char *path_dest, const hsize_t *block_coord_dset));
GOTCHA_WRAP(H5LTread_dataset, herr_t, (hid_t loc_id, const char *dset_name, hid_t type_id, void *buffer));
GOTCHA_WRAP(H5Pset_preserve, herr_t, (hid_t plist_id, hbool_t status));
GOTCHA_WRAP(H5Piterate, int, (hid_t id, int *idx, H5P_iterate_t iter_func, void *iter_data));
GOTCHA_WRAP(H5Pget_family_offset, herr_t, (hid_t fapl_id, hsize_t *offset));
GOTCHA_WRAP(H5Pget_vol_cap_flags, herr_t, (hid_t plist_id, uint64_t *cap_flags));
GOTCHA_WRAP(H5LRcreate_region_references, herr_t, (hid_t obj_id, size_t num_elem, const char **path, const hsize_t *block_coord, hdset_reg_ref_t *buf));
GOTCHA_WRAP(H5LTget_attribute_long, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, long *data));
GOTCHA_WRAP(H5free_memory, herr_t, (void *mem));
GOTCHA_WRAP(H5ESget_err_count, herr_t, (hid_t es_id, size_t *num_errs));
GOTCHA_WRAP(H5Fget_obj_count, ssize_t, (hid_t file_id, unsigned types));
GOTCHA_WRAP(H5LTread_dataset_string, herr_t, (hid_t loc_id, const char *dset_name, char *buf));
GOTCHA_WRAP(H5Ovisit_by_name2, herr_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, H5O_iterate1_t op, void *op_data, unsigned fields, hid_t lapl_id));
GOTCHA_WRAP(H5Pset_file_image, herr_t, (hid_t fapl_id, void *buf_ptr, size_t buf_len));
GOTCHA_WRAP(H5Pset_shared_mesg_index, herr_t, (hid_t plist_id, unsigned index_num, unsigned mesg_type_flags, unsigned min_mesg_size));
GOTCHA_WRAP(H5Lcreate_hard, herr_t, (hid_t cur_loc, const char *cur_name, hid_t dst_loc, const char *dst_name, hid_t lcpl_id, hid_t lapl_id));
GOTCHA_WRAP(H5PTappend, herr_t, (hid_t table_id, size_t nrecords, const void *data));
GOTCHA_WRAP(H5Oget_info_by_idx1, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5O_info1_t *oinfo, hid_t lapl_id));
GOTCHA_WRAP(H5DSset_scale, herr_t, (hid_t dsid, const char *dimname));
GOTCHA_WRAP(H5Dcreate_anon, hid_t, (hid_t loc_id, hid_t type_id, hid_t space_id, hid_t dcpl_id, hid_t dapl_id));
GOTCHA_WRAP(H5Pget_actual_selection_io_mode, herr_t, (hid_t plist_id, uint32_t *actual_selection_io_mode));
GOTCHA_WRAP(H5Pset_elink_file_cache_size, herr_t, (hid_t plist_id, unsigned efc_size));
GOTCHA_WRAP(H5Aclose_async, herr_t, (hid_t attr_id, hid_t es_id));
GOTCHA_WRAP(H5Acreate_async, hid_t, (hid_t loc_id, const char *attr_name, hid_t type_id, hid_t space_id, hid_t acpl_id, hid_t aapl_id, hid_t es_id));
GOTCHA_WRAP(H5Acreate_by_name_async, hid_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hid_t type_id, hid_t space_id, hid_t acpl_id, hid_t aapl_id, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Aexists_async, herr_t, (hid_t obj_id, const char *attr_name, hbool_t *exists, hid_t es_id));
GOTCHA_WRAP(H5Aexists_by_name_async, herr_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hbool_t *exists, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Aopen_async, hid_t, (hid_t obj_id, const char *attr_name, hid_t aapl_id, hid_t es_id));
GOTCHA_WRAP(H5Aopen_by_idx_async, hid_t, (hid_t loc_id, const char *obj_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, hid_t aapl_id, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Aopen_by_name_async, hid_t, (hid_t loc_id, const char *obj_name, const char *attr_name, hid_t aapl_id, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Aread_async, herr_t, (hid_t attr_id, hid_t dtype_id, void *buf, hid_t es_id));
GOTCHA_WRAP(H5Arename_async, herr_t, (hid_t loc_id, const char *old_name, const char *new_name, hid_t es_id));
GOTCHA_WRAP(H5Arename_by_name_async, herr_t, (hid_t loc_id, const char *obj_name, const char *old_attr_name, const char *new_attr_name, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Awrite_async, herr_t, (hid_t attr_id, hid_t type_id, const void *buf, hid_t es_id));
GOTCHA_WRAP(H5Dcreate_async, hid_t, (hid_t loc_id, const char *name, hid_t type_id, hid_t space_id, hid_t lcpl_id, hid_t dcpl_id, hid_t dapl_id, hid_t es_id));
GOTCHA_WRAP(H5Dopen_async, hid_t, (hid_t loc_id, const char *name, hid_t dapl_id, hid_t es_id));
GOTCHA_WRAP(H5Dget_space_async, hid_t, (hid_t dset_id, hid_t es_id));
GOTCHA_WRAP(H5Dread_async, herr_t, (hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id, void *buf, hid_t es_id));
GOTCHA_WRAP(H5Dread_multi_async, herr_t, (size_t count, hid_t dset_id[], hid_t mem_type_id[], hid_t mem_space_id[], hid_t file_space_id[], hid_t dxpl_id, void *buf[], hid_t es_id));
GOTCHA_WRAP(H5Dwrite_async, herr_t, (hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id, const void *buf, hid_t es_id));
GOTCHA_WRAP(H5Dwrite_multi_async, herr_t, (size_t count, hid_t dset_id[], hid_t mem_type_id[], hid_t mem_space_id[], hid_t file_space_id[], hid_t dxpl_id, const void *buf[], hid_t es_id));
GOTCHA_WRAP(H5Dset_extent_async, herr_t, (hid_t dset_id, const hsize_t size[], hid_t es_id));
GOTCHA_WRAP(H5Dclose_async, herr_t, (hid_t dset_id, hid_t es_id));
GOTCHA_WRAP(H5Fcreate_async, hid_t, (const char *filename, unsigned flags, hid_t fcpl_id, hid_t fapl_id, hid_t es_id));
GOTCHA_WRAP(H5Fopen_async, hid_t, (const char *filename, unsigned flags, hid_t access_plist, hid_t es_id));
GOTCHA_WRAP(H5Freopen_async, hid_t, (hid_t file_id, hid_t es_id));
GOTCHA_WRAP(H5Fflush_async, herr_t, (hid_t object_id, H5F_scope_t scope, hid_t es_id));
GOTCHA_WRAP(H5Fclose_async, herr_t, (hid_t file_id, hid_t es_id));
GOTCHA_WRAP(H5Gcreate_async, hid_t, (hid_t loc_id, const char *name, hid_t lcpl_id, hid_t gcpl_id, hid_t gapl_id, hid_t es_id));
GOTCHA_WRAP(H5Gopen_async, hid_t, (hid_t loc_id, const char *name, hid_t gapl_id, hid_t es_id));
GOTCHA_WRAP(H5Gget_info_async, herr_t, (hid_t loc_id, H5G_info_t *ginfo, hid_t es_id));
GOTCHA_WRAP(H5Gget_info_by_name_async, herr_t, (hid_t loc_id, const char *name, H5G_info_t *ginfo, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Gget_info_by_idx_async, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, H5G_info_t *ginfo, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Gclose_async, herr_t, (hid_t group_id, hid_t es_id));
GOTCHA_WRAP(H5Lcreate_hard_async, herr_t, (hid_t cur_loc_id, const char *cur_name, hid_t new_loc_id, const char *new_name, hid_t lcpl_id, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Lcreate_soft_async, herr_t, (const char *link_target, hid_t link_loc_id, const char *link_name, hid_t lcpl_id, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Ldelete_async, herr_t, (hid_t loc_id, const char *name, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Ldelete_by_idx_async, herr_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Lexists_async, herr_t, (hid_t loc_id, const char *name, hbool_t *exists, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Literate_async, herr_t, (hid_t group_id, H5_index_t idx_type, H5_iter_order_t order, hsize_t *idx_p, H5L_iterate2_t op, void *op_data, hid_t es_id));
GOTCHA_WRAP(H5Mcreate_async, hid_t, (hid_t loc_id, const char *name, hid_t key_type_id, hid_t val_type_id, hid_t lcpl_id, hid_t mcpl_id, hid_t mapl_id, hid_t es_id));
GOTCHA_WRAP(H5Mopen_async, hid_t, (hid_t loc_id, const char *name, hid_t mapl_id, hid_t es_id));
GOTCHA_WRAP(H5Mclose_async, herr_t, (hid_t map_id, hid_t es_id));
GOTCHA_WRAP(H5Mput_async, herr_t, (hid_t map_id, hid_t key_mem_type_id, const void *key, hid_t val_mem_type_id, const void *value, hid_t dxpl_id, hid_t es_id));
GOTCHA_WRAP(H5Mget_async, herr_t, (hid_t map_id, hid_t key_mem_type_id, const void *key, hid_t val_mem_type_id, void *value, hid_t dxpl_id, hid_t es_id));
GOTCHA_WRAP(H5Oopen_async, hid_t, (hid_t loc_id, const char *name, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Oopen_by_idx_async, hid_t, (hid_t loc_id, const char *group_name, H5_index_t idx_type, H5_iter_order_t order, hsize_t n, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Oget_info_by_name_async, herr_t, (hid_t loc_id, const char *name, H5O_info2_t *oinfo, unsigned fields, hid_t lapl_id, hid_t es_id));
GOTCHA_WRAP(H5Ocopy_async, herr_t, (hid_t src_loc_id, const char *src_name, hid_t dst_loc_id, const char *dst_name, hid_t ocpypl_id, hid_t lcpl_id, hid_t es_id));
GOTCHA_WRAP(H5Oclose_async, herr_t, (hid_t object_id, hid_t es_id));
GOTCHA_WRAP(H5Oflush_async, herr_t, (hid_t obj_id, hid_t es_id));
GOTCHA_WRAP(H5Orefresh_async, herr_t, (hid_t oid, hid_t es_id));
GOTCHA_WRAP(H5Ropen_object_async, hid_t, (unsigned app_line, H5R_ref_t *ref_ptr, hid_t rapl_id, hid_t oapl_id, hid_t es_id));
GOTCHA_WRAP(H5Ropen_region_async, hid_t, (H5R_ref_t *ref_ptr, hid_t rapl_id, hid_t oapl_id, hid_t es_id));
GOTCHA_WRAP(H5Ropen_attr_async, hid_t, (H5R_ref_t *ref_ptr, hid_t rapl_id, hid_t aapl_id, hid_t es_id));

// PnetCDF functions
#ifdef RECORDER_WITH_PNETCDF
GOTCHA_WRAP(ncmpi_strerror, const char*, (int err));
GOTCHA_WRAP(ncmpi_strerrno, const char*, (int err));
GOTCHA_WRAP(ncmpi_create, int, (MPI_Comm comm, const char *path, int cmode, MPI_Info info, int *ncidp));
GOTCHA_WRAP(ncmpi_open, int, (MPI_Comm comm, const char *path, int omode, MPI_Info info, int *ncidp));
GOTCHA_WRAP(ncmpi_delete, int, (const char *filename, MPI_Info info));
GOTCHA_WRAP(ncmpi_enddef, int, (int ncid));
GOTCHA_WRAP(ncmpi__enddef, int, (int ncid, MPI_Offset h_minfree, MPI_Offset v_align, MPI_Offset v_minfree, MPI_Offset r_align));
GOTCHA_WRAP(ncmpi_redef, int, (int ncid));
GOTCHA_WRAP(ncmpi_set_default_format, int, (int format, int *old_formatp));
GOTCHA_WRAP(ncmpi_inq_default_format, int, (int *formatp));
GOTCHA_WRAP(ncmpi_flush, int, (int ncid));
GOTCHA_WRAP(ncmpi_sync, int, (int ncid));
GOTCHA_WRAP(ncmpi_sync_numrecs, int, (int ncid));
GOTCHA_WRAP(ncmpi_abort, int, (int ncid));
GOTCHA_WRAP(ncmpi_begin_indep_data, int, (int ncid));
GOTCHA_WRAP(ncmpi_end_indep_data, int, (int ncid));
GOTCHA_WRAP(ncmpi_close, int, (int ncid));
GOTCHA_WRAP(ncmpi_set_fill, int, (int ncid, int fillmode, int *old_modep));
GOTCHA_WRAP(ncmpi_def_dim, int, (int ncid, const char *name, MPI_Offset len, int *idp));
GOTCHA_WRAP(ncmpi_def_var, int, (int ncid, const char *name, nc_type xtype, int ndims, const int *dimidsp, int *varidp));
GOTCHA_WRAP(ncmpi_rename_dim, int, (int ncid, int dimid, const char *name));
GOTCHA_WRAP(ncmpi_rename_var, int, (int ncid, int varid, const char *name));
GOTCHA_WRAP(ncmpi_inq_libvers, const char*, (void));
GOTCHA_WRAP(ncmpi_inq, int, (int ncid, int *ndimsp, int *nvarsp, int *ngattsp, int *unlimdimidp));
GOTCHA_WRAP(ncmpi_inq_format, int, (int ncid, int *formatp));
GOTCHA_WRAP(ncmpi_inq_file_format, int, (const char *filename, int *formatp));
GOTCHA_WRAP(ncmpi_inq_version, int, (int ncid, int *nc_mode));
GOTCHA_WRAP(ncmpi_inq_striping, int, (int ncid, int *striping_size, int *striping_count));
GOTCHA_WRAP(ncmpi_inq_ndims, int, (int ncid, int *ndimsp));
GOTCHA_WRAP(ncmpi_inq_nvars, int, (int ncid, int *nvarsp));
GOTCHA_WRAP(ncmpi_inq_num_rec_vars, int, (int ncid, int *num_rec_varsp));
GOTCHA_WRAP(ncmpi_inq_num_fix_vars, int, (int ncid, int *num_fix_varsp));
GOTCHA_WRAP(ncmpi_inq_natts, int, (int ncid, int *ngattsp));
GOTCHA_WRAP(ncmpi_inq_unlimdim, int, (int ncid, int *unlimdimidp));
GOTCHA_WRAP(ncmpi_inq_dimid, int, (int ncid, const char *name, int *idp));
GOTCHA_WRAP(ncmpi_inq_dim, int, (int ncid, int dimid, char *name, MPI_Offset *lenp));
GOTCHA_WRAP(ncmpi_inq_dimname, int, (int ncid, int dimid, char *name));
GOTCHA_WRAP(ncmpi_inq_dimlen, int, (int ncid, int dimid, MPI_Offset *lenp));
GOTCHA_WRAP(ncmpi_inq_var, int, (int ncid, int varid, char *name, nc_type *xtypep, int *ndimsp, int *dimidsp, int *nattsp));
GOTCHA_WRAP(ncmpi_inq_varid, int, (int ncid, const char *name, int *varidp));
GOTCHA_WRAP(ncmpi_inq_varname, int, (int ncid, int varid, char *name));
GOTCHA_WRAP(ncmpi_inq_vartype, int, (int ncid, int varid, nc_type *xtypep));
GOTCHA_WRAP(ncmpi_inq_varndims, int, (int ncid, int varid, int *ndimsp));
GOTCHA_WRAP(ncmpi_inq_vardimid, int, (int ncid, int varid, int *dimidsp));
GOTCHA_WRAP(ncmpi_inq_varnatts, int, (int ncid, int varid, int *nattsp));
GOTCHA_WRAP(ncmpi_inq_varoffset, int, (int ncid, int varid, MPI_Offset *offset));
GOTCHA_WRAP(ncmpi_inq_put_size, int, (int ncid, MPI_Offset *size));
GOTCHA_WRAP(ncmpi_inq_get_size, int, (int ncid, MPI_Offset *size));
GOTCHA_WRAP(ncmpi_inq_header_size, int, (int ncid, MPI_Offset *size));
GOTCHA_WRAP(ncmpi_inq_header_extent, int, (int ncid, MPI_Offset *extent));
GOTCHA_WRAP(ncmpi_inq_file_info, int, (int ncid, MPI_Info *info_used));
GOTCHA_WRAP(ncmpi_get_file_info, int, (int ncid, MPI_Info *info_used));
GOTCHA_WRAP(ncmpi_inq_malloc_size, int, (MPI_Offset *size));
GOTCHA_WRAP(ncmpi_inq_malloc_max_size, int, (MPI_Offset *size));
GOTCHA_WRAP(ncmpi_inq_malloc_list, int, (void));
GOTCHA_WRAP(ncmpi_inq_files_opened, int, (int *num, int *ncids));
GOTCHA_WRAP(ncmpi_inq_recsize, int, (int ncid, MPI_Offset *recsize));
GOTCHA_WRAP(ncmpi_def_var_fill, int, (int ncid, int varid, int no_fill, const void *fill_value));
GOTCHA_WRAP(ncmpi_inq_var_fill, int, (int ncid, int varid, int *no_fill, void *fill_value));
GOTCHA_WRAP(ncmpi_inq_path, int, (int ncid, int *pathlen, char *path));
GOTCHA_WRAP(ncmpi_inq_att, int, (int ncid, int varid, const char *name, nc_type *xtypep, MPI_Offset *lenp));
GOTCHA_WRAP(ncmpi_inq_attid, int, (int ncid, int varid, const char *name, int *idp));
GOTCHA_WRAP(ncmpi_inq_atttype, int, (int ncid, int varid, const char *name, nc_type *xtypep));
GOTCHA_WRAP(ncmpi_inq_attlen, int, (int ncid, int varid, const char *name, MPI_Offset *lenp));
GOTCHA_WRAP(ncmpi_inq_attname, int, (int ncid, int varid, int attnum, char *name));
GOTCHA_WRAP(ncmpi_copy_att, int, (int ncid, int varid, const char *name, int ncid_out, int varid_out));
GOTCHA_WRAP(ncmpi_rename_att, int, (int ncid, int varid, const char *name, const char *newname));
GOTCHA_WRAP(ncmpi_del_att, int, (int ncid, int varid, const char *name));
GOTCHA_WRAP(ncmpi_put_att, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const void *op));
GOTCHA_WRAP(ncmpi_put_att_text, int, (int ncid, int varid, const char *name, MPI_Offset len, const char *op));
GOTCHA_WRAP(ncmpi_put_att_schar, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const signed char *op));
GOTCHA_WRAP(ncmpi_put_att_short, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const short *op));
GOTCHA_WRAP(ncmpi_put_att_int, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const int *op));
GOTCHA_WRAP(ncmpi_put_att_float, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const float *op));
GOTCHA_WRAP(ncmpi_put_att_double, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const double *op));
GOTCHA_WRAP(ncmpi_put_att_longlong, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const long long *op));
GOTCHA_WRAP(ncmpi_get_att, int, (int ncid, int varid, const char *name, void *ip));
GOTCHA_WRAP(ncmpi_get_att_text, int, (int ncid, int varid, const char *name, char *ip));
GOTCHA_WRAP(ncmpi_get_att_schar, int, (int ncid, int varid, const char *name, signed char *ip));
GOTCHA_WRAP(ncmpi_get_att_short, int, (int ncid, int varid, const char *name, short *ip));
GOTCHA_WRAP(ncmpi_get_att_int, int, (int ncid, int varid, const char *name, int *ip));
GOTCHA_WRAP(ncmpi_get_att_float, int, (int ncid, int varid, const char *name, float *ip));
GOTCHA_WRAP(ncmpi_get_att_double, int, (int ncid, int varid, const char *name, double *ip));
GOTCHA_WRAP(ncmpi_get_att_longlong, int, (int ncid, int varid, const char *name, long long *ip));
GOTCHA_WRAP(ncmpi_put_att_uchar, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_att_ubyte, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_att_ushort, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_att_uint, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_att_long, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const long *op));
GOTCHA_WRAP(ncmpi_put_att_ulonglong, int, (int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const unsigned long long *op));
GOTCHA_WRAP(ncmpi_get_att_uchar, int, (int ncid, int varid, const char *name, unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_att_ubyte, int, (int ncid, int varid, const char *name, unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_att_ushort, int, (int ncid, int varid, const char *name, unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_att_uint, int, (int ncid, int varid, const char *name, unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_att_long, int, (int ncid, int varid, const char *name, long *ip));
GOTCHA_WRAP(ncmpi_get_att_ulonglong, int, (int ncid, int varid, const char *name, unsigned long long *ip));
GOTCHA_WRAP(ncmpi_fill_var_rec, int, (int ncid, int varid, MPI_Offset recno));
GOTCHA_WRAP(ncmpi_put_var1, int, (int ncid, int varid, const MPI_Offset index[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_var1_all, int, (int ncid, int varid, const MPI_Offset index[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_var1_text, int, (int ncid, int varid, const MPI_Offset index[], const char *op));
GOTCHA_WRAP(ncmpi_put_var1_text_all, int, (int ncid, int varid, const MPI_Offset index[], const char *op));
GOTCHA_WRAP(ncmpi_put_var1_schar, int, (int ncid, int varid, const MPI_Offset index[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_var1_schar_all, int, (int ncid, int varid, const MPI_Offset index[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_var1_short, int, (int ncid, int varid, const MPI_Offset index[], const short *op));
GOTCHA_WRAP(ncmpi_put_var1_short_all, int, (int ncid, int varid, const MPI_Offset index[], const short *op));
GOTCHA_WRAP(ncmpi_put_var1_int, int, (int ncid, int varid, const MPI_Offset index[], const int *op));
GOTCHA_WRAP(ncmpi_put_var1_int_all, int, (int ncid, int varid, const MPI_Offset index[], const int *op));
GOTCHA_WRAP(ncmpi_put_var1_float, int, (int ncid, int varid, const MPI_Offset index[], const float *op));
GOTCHA_WRAP(ncmpi_put_var1_float_all, int, (int ncid, int varid, const MPI_Offset index[], const float *op));
GOTCHA_WRAP(ncmpi_put_var1_double, int, (int ncid, int varid, const MPI_Offset index[], const double *op));
GOTCHA_WRAP(ncmpi_put_var1_double_all, int, (int ncid, int varid, const MPI_Offset index[], const double *op));
GOTCHA_WRAP(ncmpi_put_var1_longlong, int, (int ncid, int varid, const MPI_Offset index[], const long long *op));
GOTCHA_WRAP(ncmpi_put_var1_longlong_all, int, (int ncid, int varid, const MPI_Offset index[], const long long *op));
GOTCHA_WRAP(ncmpi_get_var1, int, (int ncid, int varid, const MPI_Offset index[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_var1_all, int, (int ncid, int varid, const MPI_Offset index[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_var1_text, int, (int ncid, int varid, const MPI_Offset index[], char *ip));
GOTCHA_WRAP(ncmpi_get_var1_text_all, int, (int ncid, int varid, const MPI_Offset index[], char *ip));
GOTCHA_WRAP(ncmpi_get_var1_schar, int, (int ncid, int varid, const MPI_Offset index[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_var1_schar_all, int, (int ncid, int varid, const MPI_Offset index[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_var1_short, int, (int ncid, int varid, const MPI_Offset index[], short *ip));
GOTCHA_WRAP(ncmpi_get_var1_short_all, int, (int ncid, int varid, const MPI_Offset index[], short *ip));
GOTCHA_WRAP(ncmpi_get_var1_int, int, (int ncid, int varid, const MPI_Offset index[], int *ip));
GOTCHA_WRAP(ncmpi_get_var1_int_all, int, (int ncid, int varid, const MPI_Offset index[], int *ip));
GOTCHA_WRAP(ncmpi_get_var1_float, int, (int ncid, int varid, const MPI_Offset index[], float *ip));
GOTCHA_WRAP(ncmpi_get_var1_float_all, int, (int ncid, int varid, const MPI_Offset index[], float *ip));
GOTCHA_WRAP(ncmpi_get_var1_double, int, (int ncid, int varid, const MPI_Offset index[], double *ip));
GOTCHA_WRAP(ncmpi_get_var1_double_all, int, (int ncid, int varid, const MPI_Offset index[], double *ip));
GOTCHA_WRAP(ncmpi_get_var1_longlong, int, (int ncid, int varid, const MPI_Offset index[], long long *ip));
GOTCHA_WRAP(ncmpi_get_var1_longlong_all, int, (int ncid, int varid, const MPI_Offset index[], long long *ip));
GOTCHA_WRAP(ncmpi_put_var1_uchar, int, (int ncid, int varid, const MPI_Offset index[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_var1_uchar_all, int, (int ncid, int varid, const MPI_Offset index[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_var1_ushort, int, (int ncid, int varid, const MPI_Offset index[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_var1_ushort_all, int, (int ncid, int varid, const MPI_Offset index[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_var1_uint, int, (int ncid, int varid, const MPI_Offset index[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_var1_uint_all, int, (int ncid, int varid, const MPI_Offset index[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_var1_long, int, (int ncid, int varid, const MPI_Offset index[], const long *ip));
GOTCHA_WRAP(ncmpi_put_var1_long_all, int, (int ncid, int varid, const MPI_Offset index[], const long *ip));
GOTCHA_WRAP(ncmpi_put_var1_ulonglong, int, (int ncid, int varid, const MPI_Offset index[], const unsigned long long *ip));
GOTCHA_WRAP(ncmpi_put_var1_ulonglong_all, int, (int ncid, int varid, const MPI_Offset index[], const unsigned long long *ip));
GOTCHA_WRAP(ncmpi_get_var1_uchar, int, (int ncid, int varid, const MPI_Offset index[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_var1_uchar_all, int, (int ncid, int varid, const MPI_Offset index[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_var1_ushort, int, (int ncid, int varid, const MPI_Offset index[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_var1_ushort_all, int, (int ncid, int varid, const MPI_Offset index[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_var1_uint, int, (int ncid, int varid, const MPI_Offset index[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_var1_uint_all, int, (int ncid, int varid, const MPI_Offset index[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_var1_long, int, (int ncid, int varid, const MPI_Offset index[], long *ip));
GOTCHA_WRAP(ncmpi_get_var1_long_all, int, (int ncid, int varid, const MPI_Offset index[], long *ip));
GOTCHA_WRAP(ncmpi_get_var1_ulonglong, int, (int ncid, int varid, const MPI_Offset index[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_get_var1_ulonglong_all, int, (int ncid, int varid, const MPI_Offset index[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_put_var, int, (int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_var_all, int, (int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_var_text, int, (int ncid, int varid, const char *op));
GOTCHA_WRAP(ncmpi_put_var_text_all, int, (int ncid, int varid, const char *op));
GOTCHA_WRAP(ncmpi_put_var_schar, int, (int ncid, int varid, const signed char *op));
GOTCHA_WRAP(ncmpi_put_var_schar_all, int, (int ncid, int varid, const signed char *op));
GOTCHA_WRAP(ncmpi_put_var_short, int, (int ncid, int varid, const short *op));
GOTCHA_WRAP(ncmpi_put_var_short_all, int, (int ncid, int varid, const short *op));
GOTCHA_WRAP(ncmpi_put_var_int, int, (int ncid, int varid, const int *op));
GOTCHA_WRAP(ncmpi_put_var_int_all, int, (int ncid, int varid, const int *op));
GOTCHA_WRAP(ncmpi_put_var_float, int, (int ncid, int varid, const float *op));
GOTCHA_WRAP(ncmpi_put_var_float_all, int, (int ncid, int varid, const float *op));
GOTCHA_WRAP(ncmpi_put_var_double, int, (int ncid, int varid, const double *op));
GOTCHA_WRAP(ncmpi_put_var_double_all, int, (int ncid, int varid, const double *op));
GOTCHA_WRAP(ncmpi_put_var_longlong, int, (int ncid, int varid, const long long *op));
GOTCHA_WRAP(ncmpi_put_var_longlong_all, int, (int ncid, int varid, const long long *op));
GOTCHA_WRAP(ncmpi_get_var, int, (int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_var_all, int, (int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_var_text, int, (int ncid, int varid, char *ip));
GOTCHA_WRAP(ncmpi_get_var_text_all, int, (int ncid, int varid, char *ip));
GOTCHA_WRAP(ncmpi_get_var_schar, int, (int ncid, int varid, signed char *ip));
GOTCHA_WRAP(ncmpi_get_var_schar_all, int, (int ncid, int varid, signed char *ip));
GOTCHA_WRAP(ncmpi_get_var_short, int, (int ncid, int varid, short *ip));
GOTCHA_WRAP(ncmpi_get_var_short_all, int, (int ncid, int varid, short *ip));
GOTCHA_WRAP(ncmpi_get_var_int, int, (int ncid, int varid, int *ip));
GOTCHA_WRAP(ncmpi_get_var_int_all, int, (int ncid, int varid, int *ip));
GOTCHA_WRAP(ncmpi_get_var_float, int, (int ncid, int varid, float *ip));
GOTCHA_WRAP(ncmpi_get_var_float_all, int, (int ncid, int varid, float *ip));
GOTCHA_WRAP(ncmpi_get_var_double, int, (int ncid, int varid, double *ip));
GOTCHA_WRAP(ncmpi_get_var_double_all, int, (int ncid, int varid, double *ip));
GOTCHA_WRAP(ncmpi_get_var_longlong, int, (int ncid, int varid, long long *ip));
GOTCHA_WRAP(ncmpi_get_var_longlong_all, int, (int ncid, int varid, long long *ip));
GOTCHA_WRAP(ncmpi_put_var_uchar, int, (int ncid, int varid, const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_var_uchar_all, int, (int ncid, int varid, const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_var_ushort, int, (int ncid, int varid, const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_var_ushort_all, int, (int ncid, int varid, const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_var_uint, int, (int ncid, int varid, const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_var_uint_all, int, (int ncid, int varid, const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_var_long, int, (int ncid, int varid, const long *op));
GOTCHA_WRAP(ncmpi_put_var_long_all, int, (int ncid, int varid, const long *op));
GOTCHA_WRAP(ncmpi_put_var_ulonglong, int, (int ncid, int varid, const unsigned long long *op));
GOTCHA_WRAP(ncmpi_put_var_ulonglong_all, int, (int ncid, int varid, const unsigned long long *op));
GOTCHA_WRAP(ncmpi_get_var_uchar, int, (int ncid, int varid, unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_var_uchar_all, int, (int ncid, int varid, unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_var_ushort, int, (int ncid, int varid, unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_var_ushort_all, int, (int ncid, int varid, unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_var_uint, int, (int ncid, int varid, unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_var_uint_all, int, (int ncid, int varid, unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_var_long, int, (int ncid, int varid, long *ip));
GOTCHA_WRAP(ncmpi_get_var_long_all, int, (int ncid, int varid, long *ip));
GOTCHA_WRAP(ncmpi_get_var_ulonglong, int, (int ncid, int varid, unsigned long long *ip));
GOTCHA_WRAP(ncmpi_get_var_ulonglong_all, int, (int ncid, int varid, unsigned long long *ip));
GOTCHA_WRAP(ncmpi_put_vara, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_vara_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_vara_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op));
GOTCHA_WRAP(ncmpi_put_vara_text_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op));
GOTCHA_WRAP(ncmpi_put_vara_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_vara_schar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_vara_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op));
GOTCHA_WRAP(ncmpi_put_vara_short_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op));
GOTCHA_WRAP(ncmpi_put_vara_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op));
GOTCHA_WRAP(ncmpi_put_vara_int_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op));
GOTCHA_WRAP(ncmpi_put_vara_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op));
GOTCHA_WRAP(ncmpi_put_vara_float_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op));
GOTCHA_WRAP(ncmpi_put_vara_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op));
GOTCHA_WRAP(ncmpi_put_vara_double_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op));
GOTCHA_WRAP(ncmpi_put_vara_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long long *op));
GOTCHA_WRAP(ncmpi_put_vara_longlong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long long *op));
GOTCHA_WRAP(ncmpi_get_vara, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_vara_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_vara_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip));
GOTCHA_WRAP(ncmpi_get_vara_text_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip));
GOTCHA_WRAP(ncmpi_get_vara_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_vara_schar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_vara_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip));
GOTCHA_WRAP(ncmpi_get_vara_short_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip));
GOTCHA_WRAP(ncmpi_get_vara_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip));
GOTCHA_WRAP(ncmpi_get_vara_int_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip));
GOTCHA_WRAP(ncmpi_get_vara_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip));
GOTCHA_WRAP(ncmpi_get_vara_float_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip));
GOTCHA_WRAP(ncmpi_get_vara_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip));
GOTCHA_WRAP(ncmpi_get_vara_double_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip));
GOTCHA_WRAP(ncmpi_get_vara_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long long *ip));
GOTCHA_WRAP(ncmpi_get_vara_longlong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long long *ip));
GOTCHA_WRAP(ncmpi_put_vara_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_vara_uchar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_vara_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_vara_ushort_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_vara_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_vara_uint_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_vara_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op));
GOTCHA_WRAP(ncmpi_put_vara_long_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op));
GOTCHA_WRAP(ncmpi_put_vara_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned long long *op));
GOTCHA_WRAP(ncmpi_put_vara_ulonglong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned long long *op));
GOTCHA_WRAP(ncmpi_get_vara_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_vara_uchar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_vara_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_vara_ushort_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_vara_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_vara_uint_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_vara_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip));
GOTCHA_WRAP(ncmpi_get_vara_long_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip));
GOTCHA_WRAP(ncmpi_get_vara_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_get_vara_ulonglong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_put_vars, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_vars_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_vars_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op));
GOTCHA_WRAP(ncmpi_put_vars_text_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op));
GOTCHA_WRAP(ncmpi_put_vars_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_vars_schar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_vars_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op));
GOTCHA_WRAP(ncmpi_put_vars_short_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op));
GOTCHA_WRAP(ncmpi_put_vars_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op));
GOTCHA_WRAP(ncmpi_put_vars_int_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op));
GOTCHA_WRAP(ncmpi_put_vars_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op));
GOTCHA_WRAP(ncmpi_put_vars_float_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op));
GOTCHA_WRAP(ncmpi_put_vars_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op));
GOTCHA_WRAP(ncmpi_put_vars_double_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op));
GOTCHA_WRAP(ncmpi_put_vars_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long long *op));
GOTCHA_WRAP(ncmpi_put_vars_longlong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long long *op));
GOTCHA_WRAP(ncmpi_get_vars, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_vars_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_vars_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_vars_schar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_vars_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip));
GOTCHA_WRAP(ncmpi_get_vars_text_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip));
GOTCHA_WRAP(ncmpi_get_vars_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip));
GOTCHA_WRAP(ncmpi_get_vars_short_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip));
GOTCHA_WRAP(ncmpi_get_vars_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip));
GOTCHA_WRAP(ncmpi_get_vars_int_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip));
GOTCHA_WRAP(ncmpi_get_vars_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip));
GOTCHA_WRAP(ncmpi_get_vars_float_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip));
GOTCHA_WRAP(ncmpi_get_vars_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip));
GOTCHA_WRAP(ncmpi_get_vars_double_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip));
GOTCHA_WRAP(ncmpi_get_vars_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long long *ip));
GOTCHA_WRAP(ncmpi_get_vars_longlong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long long *ip));
GOTCHA_WRAP(ncmpi_put_vars_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_vars_uchar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_vars_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_vars_ushort_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_vars_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_vars_uint_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_vars_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op));
GOTCHA_WRAP(ncmpi_put_vars_long_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op));
GOTCHA_WRAP(ncmpi_put_vars_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned long long *op));
GOTCHA_WRAP(ncmpi_put_vars_ulonglong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned long long *op));
GOTCHA_WRAP(ncmpi_get_vars_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_vars_uchar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_vars_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_vars_ushort_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_vars_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_vars_uint_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_vars_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip));
GOTCHA_WRAP(ncmpi_get_vars_long_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip));
GOTCHA_WRAP(ncmpi_get_vars_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_get_vars_ulonglong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_put_varm, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_varm_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_varm_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op));
GOTCHA_WRAP(ncmpi_put_varm_text_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op));
GOTCHA_WRAP(ncmpi_put_varm_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_varm_schar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op));
GOTCHA_WRAP(ncmpi_put_varm_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op));
GOTCHA_WRAP(ncmpi_put_varm_short_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op));
GOTCHA_WRAP(ncmpi_put_varm_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op));
GOTCHA_WRAP(ncmpi_put_varm_int_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op));
GOTCHA_WRAP(ncmpi_put_varm_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op));
GOTCHA_WRAP(ncmpi_put_varm_float_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op));
GOTCHA_WRAP(ncmpi_put_varm_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op));
GOTCHA_WRAP(ncmpi_put_varm_double_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op));
GOTCHA_WRAP(ncmpi_put_varm_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long long *op));
GOTCHA_WRAP(ncmpi_put_varm_longlong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long long *op));
GOTCHA_WRAP(ncmpi_get_varm, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_varm_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_varm_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_varm_schar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip));
GOTCHA_WRAP(ncmpi_get_varm_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip));
GOTCHA_WRAP(ncmpi_get_varm_text_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip));
GOTCHA_WRAP(ncmpi_get_varm_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip));
GOTCHA_WRAP(ncmpi_get_varm_short_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip));
GOTCHA_WRAP(ncmpi_get_varm_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip));
GOTCHA_WRAP(ncmpi_get_varm_int_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip));
GOTCHA_WRAP(ncmpi_get_varm_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip));
GOTCHA_WRAP(ncmpi_get_varm_float_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip));
GOTCHA_WRAP(ncmpi_get_varm_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip));
GOTCHA_WRAP(ncmpi_get_varm_double_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip));
GOTCHA_WRAP(ncmpi_get_varm_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long long *ip));
GOTCHA_WRAP(ncmpi_get_varm_longlong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long long *ip));
GOTCHA_WRAP(ncmpi_put_varm_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_varm_uchar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op));
GOTCHA_WRAP(ncmpi_put_varm_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_varm_ushort_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned short *op));
GOTCHA_WRAP(ncmpi_put_varm_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_varm_uint_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned int *op));
GOTCHA_WRAP(ncmpi_put_varm_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op));
GOTCHA_WRAP(ncmpi_put_varm_long_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op));
GOTCHA_WRAP(ncmpi_put_varm_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned long long *op));
GOTCHA_WRAP(ncmpi_put_varm_ulonglong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned long long *op));
GOTCHA_WRAP(ncmpi_get_varm_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_varm_uchar_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip));
GOTCHA_WRAP(ncmpi_get_varm_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_varm_ushort_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned short *ip));
GOTCHA_WRAP(ncmpi_get_varm_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_varm_uint_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned int *ip));
GOTCHA_WRAP(ncmpi_get_varm_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip));
GOTCHA_WRAP(ncmpi_get_varm_long_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip));
GOTCHA_WRAP(ncmpi_get_varm_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_get_varm_ulonglong_all, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned long long *ip));
GOTCHA_WRAP(ncmpi_wait, int, (int ncid, int count, int array_of_requests[], int array_of_statuses[]));
GOTCHA_WRAP(ncmpi_wait_all, int, (int ncid, int count, int array_of_requests[], int array_of_statuses[]));
GOTCHA_WRAP(ncmpi_cancel, int, (int ncid, int num, int *requests, int *statuses));
GOTCHA_WRAP(ncmpi_buffer_attach, int, (int ncid, MPI_Offset bufsize));
GOTCHA_WRAP(ncmpi_buffer_detach, int, (int ncid));
GOTCHA_WRAP(ncmpi_inq_buffer_usage, int, (int ncid, MPI_Offset *usage));
GOTCHA_WRAP(ncmpi_inq_buffer_size, int, (int ncid, MPI_Offset *buf_size));
GOTCHA_WRAP(ncmpi_inq_nreqs, int, (int ncid, int *nreqs));
GOTCHA_WRAP(ncmpi_iput_var1, int, (int ncid, int varid, const MPI_Offset index[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_text, int, (int ncid, int varid, const MPI_Offset index[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_schar, int, (int ncid, int varid, const MPI_Offset index[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_short, int, (int ncid, int varid, const MPI_Offset index[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_int, int, (int ncid, int varid, const MPI_Offset index[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_float, int, (int ncid, int varid, const MPI_Offset index[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_double, int, (int ncid, int varid, const MPI_Offset index[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_longlong, int, (int ncid, int varid, const MPI_Offset index[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_var1, int, (int ncid, int varid, const MPI_Offset index[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_schar, int, (int ncid, int varid, const MPI_Offset index[], signed char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_text, int, (int ncid, int varid, const MPI_Offset index[], char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_short, int, (int ncid, int varid, const MPI_Offset index[], short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_int, int, (int ncid, int varid, const MPI_Offset index[], int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_float, int, (int ncid, int varid, const MPI_Offset index[], float *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_double, int, (int ncid, int varid, const MPI_Offset index[], double *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_longlong, int, (int ncid, int varid, const MPI_Offset index[], long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_var1, int, (int ncid, int varid, const MPI_Offset index[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_text, int, (int ncid, int varid, const MPI_Offset index[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_schar, int, (int ncid, int varid, const MPI_Offset index[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_short, int, (int ncid, int varid, const MPI_Offset index[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_int, int, (int ncid, int varid, const MPI_Offset index[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_float, int, (int ncid, int varid, const MPI_Offset index[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_double, int, (int ncid, int varid, const MPI_Offset index[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_longlong, int, (int ncid, int varid, const MPI_Offset index[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_uchar, int, (int ncid, int varid, const MPI_Offset index[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_ushort, int, (int ncid, int varid, const MPI_Offset index[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_uint, int, (int ncid, int varid, const MPI_Offset index[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_long, int, (int ncid, int varid, const MPI_Offset index[], const long *ip, int *request));
GOTCHA_WRAP(ncmpi_iput_var1_ulonglong, int, (int ncid, int varid, const MPI_Offset index[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_uchar, int, (int ncid, int varid, const MPI_Offset index[], unsigned char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_ushort, int, (int ncid, int varid, const MPI_Offset index[], unsigned short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_uint, int, (int ncid, int varid, const MPI_Offset index[], unsigned int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_long, int, (int ncid, int varid, const MPI_Offset index[], long *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var1_ulonglong, int, (int ncid, int varid, const MPI_Offset index[], unsigned long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_uchar, int, (int ncid, int varid, const MPI_Offset index[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_ushort, int, (int ncid, int varid, const MPI_Offset index[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_uint, int, (int ncid, int varid, const MPI_Offset index[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_long, int, (int ncid, int varid, const MPI_Offset index[], const long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_var1_ulonglong, int, (int ncid, int varid, const MPI_Offset index[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var, int, (int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iput_var_schar, int, (int ncid, int varid, const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_text, int, (int ncid, int varid, const char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_short, int, (int ncid, int varid, const short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_int, int, (int ncid, int varid, const int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_float, int, (int ncid, int varid, const float *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_double, int, (int ncid, int varid, const double *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_longlong, int, (int ncid, int varid, const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_var, int, (int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iget_var_schar, int, (int ncid, int varid, signed char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_text, int, (int ncid, int varid, char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_short, int, (int ncid, int varid, short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_int, int, (int ncid, int varid, int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_float, int, (int ncid, int varid, float *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_double, int, (int ncid, int varid, double *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_longlong, int, (int ncid, int varid, long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_var, int, (int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_bput_var_schar, int, (int ncid, int varid, const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_text, int, (int ncid, int varid, const char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_short, int, (int ncid, int varid, const short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_int, int, (int ncid, int varid, const int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_float, int, (int ncid, int varid, const float *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_double, int, (int ncid, int varid, const double *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_longlong, int, (int ncid, int varid, const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_uchar, int, (int ncid, int varid, const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_ushort, int, (int ncid, int varid, const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_uint, int, (int ncid, int varid, const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_long, int, (int ncid, int varid, const long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_var_ulonglong, int, (int ncid, int varid, const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_var_uchar, int, (int ncid, int varid, unsigned char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_ushort, int, (int ncid, int varid, unsigned short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_uint, int, (int ncid, int varid, unsigned int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_long, int, (int ncid, int varid, long *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_var_ulonglong, int, (int ncid, int varid, unsigned long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_var_uchar, int, (int ncid, int varid, const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_ushort, int, (int ncid, int varid, const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_uint, int, (int ncid, int varid, const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_long, int, (int ncid, int varid, const long *op, int *request));
GOTCHA_WRAP(ncmpi_bput_var_ulonglong, int, (int ncid, int varid, const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_vara, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_vara, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vara_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vara_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vara_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_vars, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_vars, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_vars_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_vars_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op, int *request));
GOTCHA_WRAP(ncmpi_bput_vars_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_varm, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_varm, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_schar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_text, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_short, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_int, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_float, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_double, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_longlong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op, int *request));
GOTCHA_WRAP(ncmpi_iput_varm_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned short *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned int *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip, int *request));
GOTCHA_WRAP(ncmpi_iget_varm_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned long long *ip, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_uchar, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_ushort, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned short *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_uint, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned int *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_long, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op, int *request));
GOTCHA_WRAP(ncmpi_bput_varm_ulonglong, int, (int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned long long *op, int *request));
GOTCHA_WRAP(ncmpi_put_varn, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_varn_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_varn, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_varn_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_varn_text, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const char *buf));
GOTCHA_WRAP(ncmpi_put_varn_schar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const signed char *buf));
GOTCHA_WRAP(ncmpi_put_varn_short, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const short *buf));
GOTCHA_WRAP(ncmpi_put_varn_int, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const int *buf));
GOTCHA_WRAP(ncmpi_put_varn_float, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const float *buf));
GOTCHA_WRAP(ncmpi_put_varn_double, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const double *buf));
GOTCHA_WRAP(ncmpi_put_varn_longlong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long long *buf));
GOTCHA_WRAP(ncmpi_put_varn_text_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const char *buf));
GOTCHA_WRAP(ncmpi_put_varn_schar_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const signed char *buf));
GOTCHA_WRAP(ncmpi_put_varn_short_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const short *buf));
GOTCHA_WRAP(ncmpi_put_varn_int_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const int *buf));
GOTCHA_WRAP(ncmpi_put_varn_float_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const float *buf));
GOTCHA_WRAP(ncmpi_put_varn_double_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const double *buf));
GOTCHA_WRAP(ncmpi_put_varn_longlong_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long long *buf));
GOTCHA_WRAP(ncmpi_get_varn_text, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], char *buf));
GOTCHA_WRAP(ncmpi_get_varn_schar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], signed char *buf));
GOTCHA_WRAP(ncmpi_get_varn_short, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], short *buf));
GOTCHA_WRAP(ncmpi_get_varn_int, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], int *buf));
GOTCHA_WRAP(ncmpi_get_varn_float, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], float *buf));
GOTCHA_WRAP(ncmpi_get_varn_double, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], double *buf));
GOTCHA_WRAP(ncmpi_get_varn_longlong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], long long *buf));
GOTCHA_WRAP(ncmpi_get_varn_text_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], char *buf));
GOTCHA_WRAP(ncmpi_get_varn_schar_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], signed char *buf));
GOTCHA_WRAP(ncmpi_get_varn_short_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], short *buf));
GOTCHA_WRAP(ncmpi_get_varn_int_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], int *buf));
GOTCHA_WRAP(ncmpi_get_varn_float_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], float *buf));
GOTCHA_WRAP(ncmpi_get_varn_double_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], double *buf));
GOTCHA_WRAP(ncmpi_get_varn_longlong_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], long long *buf));
GOTCHA_WRAP(ncmpi_put_varn_uchar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned char *buf));
GOTCHA_WRAP(ncmpi_put_varn_ushort, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned short *buf));
GOTCHA_WRAP(ncmpi_put_varn_uint, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned int *buf));
GOTCHA_WRAP(ncmpi_put_varn_long, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long *buf));
GOTCHA_WRAP(ncmpi_put_varn_ulonglong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned long long *buf));
GOTCHA_WRAP(ncmpi_put_varn_uchar_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned char *buf));
GOTCHA_WRAP(ncmpi_put_varn_ushort_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned short *buf));
GOTCHA_WRAP(ncmpi_put_varn_uint_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned int *buf));
GOTCHA_WRAP(ncmpi_put_varn_long_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long *buf));
GOTCHA_WRAP(ncmpi_put_varn_ulonglong_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned long long *buf));
GOTCHA_WRAP(ncmpi_get_varn_uchar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned char *buf));
GOTCHA_WRAP(ncmpi_get_varn_ushort, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned short *buf));
GOTCHA_WRAP(ncmpi_get_varn_uint, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned int *buf));
GOTCHA_WRAP(ncmpi_get_varn_long, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], long *buf));
GOTCHA_WRAP(ncmpi_get_varn_ulonglong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned long long *buf));
GOTCHA_WRAP(ncmpi_get_varn_uchar_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned char *buf));
GOTCHA_WRAP(ncmpi_get_varn_ushort_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned short *buf));
GOTCHA_WRAP(ncmpi_get_varn_uint_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned int *buf));
GOTCHA_WRAP(ncmpi_get_varn_long_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], long *buf));
GOTCHA_WRAP(ncmpi_get_varn_ulonglong_all, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned long long *buf));
GOTCHA_WRAP(ncmpi_iput_varn, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iget_varn, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_text, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const char *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_schar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const signed char *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_short, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const short *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_int, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const int *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_float, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const float *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_double, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const double *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_longlong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long long *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_text, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], char *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_schar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], signed char *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_short, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], short *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_int, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], int *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_float, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], float *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_double, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], double *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_longlong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], long long *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_uchar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned char *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_ushort, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned short *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_uint, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned int *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_long, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long *buf, int *request));
GOTCHA_WRAP(ncmpi_iput_varn_ulonglong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned long long *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_uchar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned char *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_ushort, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned short *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_uint, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned int *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_long, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], long *buf, int *request));
GOTCHA_WRAP(ncmpi_iget_varn_ulonglong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned long long *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const void *buf, MPI_Offset bufcount, MPI_Datatype buftype, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_text, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const char *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_schar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const signed char *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_short, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const short *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_int, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const int *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_float, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const float *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_double, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const double *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_longlong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long long *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_uchar, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned char *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_ushort, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned short *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_uint, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned int *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_long, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const long *buf, int *request));
GOTCHA_WRAP(ncmpi_bput_varn_ulonglong, int, (int ncid, int varid, int num, MPI_Offset* const starts[], MPI_Offset* const counts[], const unsigned long long *buf, int *request));
GOTCHA_WRAP(ncmpi_get_vard, int, (int ncid, int varid, MPI_Datatype filetype, void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_get_vard_all, int, (int ncid, int varid, MPI_Datatype filetype, void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_vard, int, (int ncid, int varid, MPI_Datatype filetype, const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_put_vard_all, int, (int ncid, int varid, MPI_Datatype filetype, const void *buf, MPI_Offset bufcount, MPI_Datatype buftype));
GOTCHA_WRAP(ncmpi_mput_var, int, (int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_var_all, int, (int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_var_text, int, (int ncid, int num, int varids[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_schar, int, (int ncid, int num, int varids[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_uchar, int, (int ncid, int num, int varids[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_short, int, (int ncid, int num, int varids[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_ushort, int, (int ncid, int num, int varids[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_int, int, (int ncid, int num, int varids[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_uint, int, (int ncid, int num, int varids[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_long, int, (int ncid, int num, int varids[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_float, int, (int ncid, int num, int varids[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_double, int, (int ncid, int num, int varids[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_longlong, int, (int ncid, int num, int varids[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_ulonglong, int, (int ncid, int num, int varids[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_text_all, int, (int ncid, int num, int varids[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_schar_all, int, (int ncid, int num, int varids[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_uchar_all, int, (int ncid, int num, int varids[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_short_all, int, (int ncid, int num, int varids[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_ushort_all, int, (int ncid, int num, int varids[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_int_all, int, (int ncid, int num, int varids[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_uint_all, int, (int ncid, int num, int varids[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_long_all, int, (int ncid, int num, int varids[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_float_all, int, (int ncid, int num, int varids[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_double_all, int, (int ncid, int num, int varids[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_longlong_all, int, (int ncid, int num, int varids[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var_ulonglong_all, int, (int ncid, int num, int varids[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_var1_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_var1_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_var1_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_vara_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_vara_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vara_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_vars_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_vars_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_vars_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_varm_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mput_varm_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mput_varm_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var, int, (int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_var_all, int, (int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_var_text, int, (int ncid, int num, int varids[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_schar, int, (int ncid, int num, int varids[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_uchar, int, (int ncid, int num, int varids[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_short, int, (int ncid, int num, int varids[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_ushort, int, (int ncid, int num, int varids[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_int, int, (int ncid, int num, int varids[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_uint, int, (int ncid, int num, int varids[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_long, int, (int ncid, int num, int varids[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_float, int, (int ncid, int num, int varids[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_double, int, (int ncid, int num, int varids[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_longlong, int, (int ncid, int num, int varids[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_ulonglong, int, (int ncid, int num, int varids[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_text_all, int, (int ncid, int num, int varids[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_schar_all, int, (int ncid, int num, int varids[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_uchar_all, int, (int ncid, int num, int varids[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_short_all, int, (int ncid, int num, int varids[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_ushort_all, int, (int ncid, int num, int varids[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_int_all, int, (int ncid, int num, int varids[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_uint_all, int, (int ncid, int num, int varids[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_long_all, int, (int ncid, int num, int varids[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_float_all, int, (int ncid, int num, int varids[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_double_all, int, (int ncid, int num, int varids[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_longlong_all, int, (int ncid, int num, int varids[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var_ulonglong_all, int, (int ncid, int num, int varids[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_var1_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_var1_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_var1_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_vara_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_vara_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vara_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_vars_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_vars_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_vars_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_varm_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[]));
GOTCHA_WRAP(ncmpi_mget_varm_text, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_schar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_uchar, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_short, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_ushort, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_int, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_uint, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_long, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_float, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_double, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_longlong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_ulonglong, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_text_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_schar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], signed char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_uchar_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned char *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_short_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_ushort_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned short *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_int_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_uint_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned int *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_long_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_float_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], float *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_double_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], double *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_longlong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], long long *bufs[]));
GOTCHA_WRAP(ncmpi_mget_varm_ulonglong_all, int, (int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], unsigned long long *bufs[]));
#endif /* RECORDER_WITH_PNETCDF */

#endif /* __RECORDER_GOTCHA_H */
